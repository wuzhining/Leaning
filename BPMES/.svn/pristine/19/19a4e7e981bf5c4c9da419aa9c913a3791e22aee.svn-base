<?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="">

	<!-- A.1 基础资料管理   生成托盘编码 -->	
	<select id="CreatTRAY_ID" parameterType="hashmap" resultType="java.util.HashMap"> 
	   SELECT IPLANT1.CREATE_TYPE_SN_P.GET_SN_P('C','TP')  AS TRAY_ID FROM DUAL
	</select> 
	<!-- 查询托盘信息 -->
	<select id="TrayInfoQuery" parameterType="hashmap" resultType="java.util.HashMap">
		<include refid="oraclePagingFileTop"></include>
		CC.* FROM (SELECT T1.TRAY_ID,T1.TRAY_NAME,T1.RFID,T1.BARCODE,ENABLE,MEMO,T1.CRT_ID,T4.EMP_NM AS CREATER_NAME,TO_CHAR(T1.CRT_DT,'YYYY-MM-DD HH24:MI:SS') AS CREATE_DATE FROM WMS1.C_WMS_TRAY_T T1
		LEFT JOIN (SELECT T2.USE_CD,T3.EMP_NM FROM IPLANT1.C_IPLANT_U1_T T2 LEFT JOIN IPLANT1.C_IPLANT_E1_T T3 ON T2.EMP_NO = T3.EMP_CD) T4 ON T1.CRT_ID=T4.USE_CD
		<where> 1=1
			<if test="TRAY_ID !=null and TRAY_ID !='' "> AND TRAY_ID='${TRAY_ID}'</if>
			<if test="TRAY_NAME !=null and TRAY_NAME !='' "> AND TRAY_NAME LIKE '%${TRAY_NAME}%'</if>
			<if test="ENABLE !=null and ENABLE !='' "> AND ENABLE='${ENABLE}'</if>
		</where> ORDER BY CREATE_DATE DESC) CC
		<include refid="oraclePagingFileBottom"></include>
	</select>
	<!-- 查询托盘信息分页总数 -->
	<select id="TrayInfoQuery_COUNT" parameterType="hashmap" resultType="java.util.HashMap">
		SELECT COUNT(1) AS ROWS_COUNT FROM WMS1.C_WMS_TRAY_T T1 
		<where> 1=1
			<if test="TRAY_ID !=null and TRAY_ID !='' "> AND TRAY_ID='${TRAY_ID}'</if>
			<if test="TRAY_NAME !=null and TRAY_NAME !='' "> AND TRAY_NAME LIKE '%${TRAY_NAME}%'</if>
			<if test="ENABLE !=null and ENABLE !='' "> AND ENABLE='${ENABLE}'</if>
		</where>
	</select>
	<!-- 新增托盘信息 -->
	<insert id="TrayInfoInsert" parameterType="java.util.List">
		INSERT INTO WMS1.C_WMS_TRAY_T(TRAY_ID,TRAY_NAME,
		<if test="RFID !=null and RFID ='' "> RFID,</if>
		<if test="BARCODE !=null and BARCODE = '' ">BARCODE,</if>
		ENABLE,MEMO,CRT_ID,CRT_DT) 
		VALUES('${TRAY_ID}','${TRAY_NAME}',
	   	<if test="RFID !=null and RFID ='' ">'${RFID}',</if>
	   	<if test="BARCODE !=null and BARCODE = '' ">'${BARCODE}',</if>
	   	'${ENABLE}','${MEMO}','${F_USE_CD}',SYSDATE)
	</insert>
	<!-- 修改托盘信息 -->
	<update id="TrayInfoUpdate" parameterType="java.util.HashMap">		
		UPDATE WMS1.C_WMS_TRAY_T
		<set>
			<if test="TRAY_NAME !=null "> TRAY_NAME='${TRAY_NAME}',</if>
			<if test="RFID !=null and RFID ='' "> RFID='${RFID}',</if>
			<if test="BARCODE !=null and BARCODE = '' "> BARCODE='${BARCODE}',</if>
			<if test="ENABLE !=null  "> ENABLE='${ENABLE}',</if>
			<if test="MEMO !=null  "> MEMO='${MEMO}',</if>
			CRT_ID='${F_USE_CD}',CRT_DT=SYSDATE
		</set>
		<where>
			TRAY_ID='${TRAY_ID}'
		</where>		
	</update>
	<!-- 删除托盘信息 -->
	<delete id="TrayInfoDelete" parameterType="hashmap">
		DELETE WMS1.C_WMS_TRAY_T
		<where>
			TRAY_ID='${TRAY_ID}'
		</where>
	</delete>
	 <select id="WarehouseInfoQuery" parameterType="hashmap" resultType="java.util.HashMap">
		<include refid="oraclePagingFileTop"></include> 
    	T1.STORE_ID,T1.STORE_NAME,T1.STORE_TYPE_ID,T2.DICT_IT_NM AS STORE_TYPE_NM,T1.TRADE_TYPE AS TRADE_TYPE_ID,T3.DICT_IT_NM AS TRADE_TYPE_NM,T1.STRUCT_TYPE AS STRUCT_TYPE_ID,T4.DICT_IT_NM AS STRUCT_TYPE_NM,T1.FUNCTION_TYPE AS FUNCTION_TYPE_ID,
		T5.DICT_IT_NM AS FUNCTION_TYPE_NM,T1.ENABLE,T1.MEMO,T1.CRT_ID,IPLANT1.F_GET_USER_NAME(T1.CRT_ID) AS CRT_NM,TO_CHAR(T1.CRT_DT,'YYYY-MM-DD HH24:MI:SS') AS CRT_DT FROM WMS1.C_WMS_STORE_T T1 
    	LEFT JOIN WMS1.C_WMS_BASIC_DD_T T2 ON T1.STORE_TYPE_ID=T2.DICT_IT LEFT JOIN WMS1.C_WMS_BASIC_DD_T T3 ON T1.TRADE_TYPE=T3.DICT_IT LEFT JOIN WMS1.C_WMS_BASIC_DD_T T4 ON T1.STRUCT_TYPE=T4.DICT_IT LEFT JOIN WMS1.C_WMS_BASIC_DD_T T5 ON T1.FUNCTION_TYPE=T5.DICT_IT
		<where> 1=1
			<if test="STORE_ID!=null and STORE_ID!=''"> and T1.STORE_ID LIKE '${STORE_ID}%'</if>
			<if test="STORE_P_ID !=null and STORE_P_ID !=''"> and T1.STORE_ID = '${STORE_P_ID}'</if>
			<if test="STORE_NAME!=null and STORE_NAME!=''"> and T1.STORE_NAME LIKE '%${STORE_NAME}%'</if>
			<if test="STORE_TYPE_ID!=null and STORE_TYPE_ID!=''"> and T1.STORE_TYPE_ID ='${STORE_TYPE_ID}'</if>
			<if test="STRUCT_TYPE!=null and STRUCT_TYPE!=''"> and T1.STRUCT_TYPE ='${STRUCT_TYPE}'</if>
			<if test="TRADE_TYPE!=null and TRADE_TYPE!=''"> and T1.TRADE_TYPE ='${TRADE_TYPE}'</if> 
			<if test="FUNCTION_TYPE!=null and FUNCTION_TYPE!=''"> and T1.FUNCTION_TYPE ='${FUNCTION_TYPE}'</if> 
			
		</where> ORDER BY T1.CRT_DT DESC
		<include refid="oraclePagingFileBottom"></include>
	</select> 
	<!-- 查询仓库信息分页页数 -->
	<select id="WarehouseInfoQuery_COUNT" parameterType="hashmap" resultType="java.util.HashMap">
		SELECT COUNT(1) AS ROWS_COUNT FROM WMS1.C_WMS_STORE_T TT1
		<where> 1=1
			<if test="STORE_ID!=null and STORE_ID!=''"> and TT1.STORE_ID LIKE '${STORE_ID}%'</if>
			<if test="STORE_P_ID !=null and STORE_P_ID !=''"> and TT1.STORE_ID = '${STORE_P_ID}'</if>
			<if test="STORE_NAME!=null and STORE_NAME!=''"> and TT1.STORE_NAME LIKE '%${STORE_NAME}%'</if>
			<if test="STORE_TYPE_ID!=null and STORE_TYPE_ID!=''"> and TT1.STORE_TYPE_ID ='${STORE_TYPE_ID}'</if>
			<if test="STRUCT_TYPE!=null and STRUCT_TYPE!=''"> and TT1.STRUCT_TYPE ='${STRUCT_TYPE}'</if>
			<if test="TRADE_TYPE!=null and TRADE_TYPE!=''"> and TT1.TRADE_TYPE ='${TRADE_TYPE}'</if> 
			<if test="FUNCTION_TYPE!=null and FUNCTION_TYPE!=''"> and TT1.FUNCTION_TYPE ='${FUNCTION_TYPE}'</if> 
			
		</where>
	</select>
	<!-- 新增仓库信息 -->
	
	<insert id="WarehouseInfoInsert" parameterType="hashmap">
		insert into WMS1.C_WMS_STORE_T(STORE_ID,STORE_NAME,STORE_TYPE_ID,ENABLE,MEMO,CRT_ID,CRT_DT,STRUCT_TYPE,TRADE_TYPE,FUNCTION_TYPE) VALUES('${STORE_ID}','${STORE_NAME}','${STORE_TYPE_ID}','${ENABLE}','${MEMO}','${F_USE_CD}',SYSDATE,'${STRUCT_TYPE_ID}','${TRADE_TYPE_ID}','${FUNCTION_TYPE_ID}')
	</insert>
	<!-- 修改仓库信息 -->
	<update id="WarehouseInfoUpdate" parameterType="java.util.HashMap">		
		update WMS1.C_WMS_STORE_T
		<set>
			<if test="STORE_NAME!=null "> STORE_NAME='${STORE_NAME}',</if>
			<if test="STORE_TYPE_ID!=null "> STORE_TYPE_ID='${STORE_TYPE_ID}',</if>
			<if test="STRUCT_TYPE_ID!=null "> STRUCT_TYPE='${STRUCT_TYPE_ID}',</if>
			<if test="TRADE_TYPE_ID!=null "> TRADE_TYPE='${TRADE_TYPE_ID}',</if>
			<if test="FUNCTION_TYPE_ID!=null "> FUNCTION_TYPE='${FUNCTION_TYPE_ID}',</if>
			<if test="ENABLE!=null "> ENABLE='${ENABLE}',</if>
			<if test="MEMO!=null"> MEMO='${MEMO}',</if>				
			CRT_ID='${F_USE_CD}',CRT_DT= SYSDATE
		</set>
		<where>
			STORE_ID='${STORE_ID}'
		</where>
	</update>
	<!-- 删除仓库信息 -->
	<delete id="WarehouseInfoDelete" parameterType="hashmap">
		DELETE WMS1.C_WMS_STORE_T
		<where>
			STORE_ID='${STORE_ID}'
		</where>
	</delete>
	<!-- 查询计量单位信息 -->
	<select id="queryWMSUnitInfo" parameterType="hashmap" resultType="java.util.HashMap">
		<include refid="oraclePagingFileTop"></include>
		UU.* FROM (SELECT unit_id,unit_name,group_name,main_unit,unit_type,CHANGE_RATE,CASE WHEN enable='1' THEN '启用' ELSE '未启用' END AS enable,MEMO,T1.CRT_ID,T4.EMP_NM AS CREATER_NAME,TO_CHAR(T1.CRT_DT,'YYYY-MM-DD HH24:MI:SS') AS  create_date
		FROM WMS1.C_WMS_UNIT_T T1 LEFT JOIN (SELECT T2.USE_CD,T3.EMP_NM FROM IPLANT1.C_IPLANT_U1_T T2 LEFT JOIN IPLANT1.C_IPLANT_E1_T T3 ON T2.EMP_NO = T3.EMP_CD) T4 ON T1.CRT_ID=T4.USE_CD
		<where> 1 = 1
			<if test="UNIT_TYPE !=null and UNIT_TYPE !='' "> and unit_type='${UNIT_TYPE}'</if>
			<if test="GROUP_NAME !=null and GROUP_NAME !='' "> and group_name='${GROUP_NAME}'</if>
			<if test="UNIT_ID !=null and UNIT_ID !='' "> and unit_id='${UNIT_ID}'</if>
			<if test="UNIT_NAME !=null and UNIT_NAME !='' "> and unit_name='${UNIT_NAME}'</if>
		</where> 
		) UU
		<include refid="oraclePagingFileBottom"></include>
	</select>
	<!-- 查询计量单位信息 分页汇总查询 -->
	<select id="queryWMSUnitInfo_COUNT" parameterType="hashmap" resultType="java.util.HashMap">
		select count(1) as rows_count FROM WMS1.C_WMS_UNIT_T T1
		<where> 1 = 1
			<if test="UNIT_TYPE !=null and UNIT_TYPE !='' "> and unit_type='${UNIT_TYPE}'</if>
			<if test="GROUP_NAME !=null and GROUP_NAME !='' "> and group_name='${GROUP_NAME}'</if>
			<if test="UNIT_ID !=null and UNIT_ID !='' "> and unit_id='${UNIT_ID}'</if>
			<if test="UNIT_NAME !=null and UNIT_NAME !='' "> and unit_name='${UNIT_NAME}'</if>
		</where>
	</select>

	<!-- 删除计量单位信息 -->
	<delete id="unitInfoDelete" parameterType="hashmap">
		delete WMS1.C_WMS_UNIT_T
		<where>
			GROUP_NAME = '${GROUP_NAME}'
		</where>
	</delete>

	<!-- 修改计量单位信息 -->
	<update id="unitInfoUpdate" parameterType="hashmap">
		update WMS1.C_WMS_UNIT_T
		<set>
			<if test="UNIT_NAME!=null "> unit_name='${UNIT_NAME}',</if>
			<if test="GROUP_NAME!=null">GROUP_NAME='${GROUP_NAME}',</if>
			<if test="MAIN_UNIT!=null  ">MAIN_UNIT='${MAIN_UNIT}',</if>
			<if test="ENABLE!=null ">ENABLE='${ENABLE}',</if>
			<if test="CHANGE_RATE!=null ">CHANGE_RATE='${CHANGE_RATE}',</if>
			<if test="NOTE!=null">MEMO='${NOTE}',</if>
			CRT_ID= '${F_USE_CD}',CRT_DT  = SYSDATE
		</set>
		<where> UNIT_ID='${UNIT_ID}'</where>
	</update>

	<!-- 新增计量单位信息 -->
	<insert id="unitInfoInsert" parameterType="java.util.List">
		INSERT INTO WMS1.C_WMS_UNIT_T(UNIT_ID,UNIT_NAME,GROUP_NAME,MAIN_UNIT,ENABLE,CHANGE_RATE,MEMO,UNIT_TYPE,CRT_ID,CRT_DT)
		(<foreach collection="list" item="item" index="index" separator="union all">
		SELECT IPLANT1.C_GET_UNIQUE_ID() ,'${item.UNIT_NAME}','${item.GROUP_NAME}','${item.MAIN_UNIT}','${item.ENABLE}','${item.CHANGE_RATE}','${item.NOTE}','${item.UNIT_TYPE}','${F_USE_CD}',SYSDATE FROM DUAL
		</foreach>)
	</insert>
	<!-- 查询出货架信息 -->
	<select id="GoodsShelfInfoQuery" parameterType="hashmap"
		resultType="java.util.HashMap">
		<include refid="oraclePagingFileTop"></include>
		S1.SHELF_ID,
		S1.SHELF_NAME,
		S1.AREA_ID,
		T2.AREA_NAME,
		S1.LOCATION_NUM,
		S1.ROW_NUM,
		S1.COL_NUM,
		S1.BARCODE,
		S1.ENABLE,
		S1.MEMO,
		S1.CRT_ID,
		IPLANT1.F_GET_USER_NAME(S1.CRT_ID) AS CRT_NM,
		TO_CHAR(S1.CRT_DT,'YYYY-MM-DD HH24:MI:SS') AS CRT_DT,
		S1.SHELF_TYPE,
		T1.DICT_IT,
		T1.DICT_IT_NM 
		FROM WMS1.C_WMS_SHELF_T S1
		LEFT JOIN WMS1.C_WMS_BASIC_DD_T T1 ON S1.SHELF_TYPE = T1.DICT_IT
		LEFT JOIN WMS1.C_WMS_AREA_T T2 ON S1.AREA_ID=T2.AREA_ID
		LEFT JOIN WMS1.C_WMS_STORE_T T3 ON T2.STORE_ID=T3.STORE_ID
		<where> T2.ENABLE='1' AND T3.ENABLE='1'
			<if test="AREA_NAME !=null and AREA_NAME !=''"> AND T2.AREA_NAME='%${AREA_NAME}%' </if>
			<if test="AREA_ID !=null and AREA_ID !=''"> AND (S1.AREA_ID='${AREA_ID}' OR T2.AREA_ID='${AREA_ID}')</if>
			<if test="STORE_ID !=null and STORE_ID !=''"> AND T3.STORE_ID='${STORE_ID}'</if>
			<if test="SHELF_ID !=null and SHELF_ID !=''"> AND S1.SHELF_ID LIKE '${SHELF_ID}%'</if>
			<if test="SHELF_P_ID !=null and SHELF_P_ID !=''"> AND S1.SHELF_ID = '${SHELF_P_ID}'</if>
			<if test="ENABLE !=null and ENABLE !=''"> AND S1.ENABLE='${ENABLE}'</if>
			<if test="SHELF_NAME !=null and SHELF_NAME !=''"> AND S1.SHELF_NAME like '%${SHELF_NAME}%'</if>
		</where>
		  ORDER BY S1.CRT_DT DESC
		<include refid="oraclePagingFileBottom"></include>
	</select>
	<!-- 查询出货架信息总数 -->
	<select id="GoodsShelfInfoQuery_COUNT" parameterType="hashmap" resultType="java.util.HashMap">
		SELECT count(1) AS ROWS_COUNT FROM WMS1.C_WMS_SHELF_T S1 LEFT JOIN WMS1.C_WMS_BASIC_DD_T T1 on s1.shelf_type = T1.dict_it LEFT JOIN WMS1.C_WMS_AREA_T T2 ON S1.AREA_ID=T2.AREA_ID
		LEFT JOIN WMS1.C_WMS_STORE_T T3 ON T2.STORE_ID=T3.STORE_ID
		<where> T2.ENABLE='1' AND T3.ENABLE='1'
			<if test="AREA_NAME !=null and AREA_NAME !=''"> AND T2.AREA_NAME='%${AREA_NAME}%' </if>
			<if test="AREA_ID !=null and AREA_ID !=''"> AND (S1.AREA_ID='${AREA_ID}' OR T2.AREA_ID='${AREA_ID}')</if>
			<if test="STORE_ID !=null and STORE_ID !=''"> AND T3.STORE_ID='${STORE_ID}'</if>
			<if test="SHELF_P_ID !=null and SHELF_P_ID !=''"> AND S1.SHELF_ID = '${SHELF_P_ID}'</if>
			<if test="SHELF_ID !=null and SHELF_ID !=''"> AND S1.SHELF_ID='${SHELF_ID}'</if>
			<if test="ENABLE !=null and ENABLE !=''"> AND S1.ENABLE='${ENABLE}'</if>
			<if test="SHELF_NAME !=null and SHELF_NAME !=''"> AND S1.SHELF_NAME like '%'||'${SHELF_NAME}'||'%'</if>
		</where>
		  ORDER BY S1.CRT_DT DESC
	</select>
	<!-- 修改货架 -->
	<update id="GoodsShelfInfoUpdate" parameterType="java.util.HashMap">	
			UPDATE WMS1.C_WMS_SHELF_T
			<set>
				<if test="SHELF_NAME!=null "> SHELF_NAME='${SHELF_NAME}',</if>
				<if test="AREA_ID!=null">AREA_ID='${AREA_ID}',</if>
				<if test="ROW_NUM !=null">ROW_NUM='${ROW_NUM}',</if>
				<if test="COL_NUM !=null">COL_NUM='${COL_NUM}',</if>
				<if test="LOCATION_NUM !=null">LOCATION_NUM='${LOCATION_NUM}',</if>
				<if test="BARCODE!=null ">BARCODE='${BARCODE}',</if>
				<if test="ENABLE!=null">ENABLE='${ENABLE}',</if>
				<if test="MEMO !=null">MEMO='${MEMO}',</if>
				<if test="SHELF_TYPE!=null">SHELF_TYPE='${SHELF_TYPE}',</if>
				CRT_ID='${F_USE_CD}',CRT_DT= SYSDATE
			</set>
			<where>
				SHELF_ID='${SHELF_ID}'
			</where>
	</update>
	<!-- 新增货架信息 -->
	<insert id="GoodsShelfInfoInsert" parameterType="hashmap">
		INSERT INTO
		 WMS1.C_WMS_SHELF_T
		 (
			SHELF_ID,
			SHELF_NAME,
			AREA_ID,
			AREA_NAME,
			ROW_NUM,
			COL_NUM,
 			LOCATION_NUM,
			BARCODE,
			ENABLE,
			MEMO,
			CRT_ID,
			CRT_DT,
			SHELF_TYPE
		)
		VALUES
		(
			'${SHELF_ID}',
			'${SHELF_NAME}',
			'${AREA_ID}',
			'${AREA_NAME}',
			'${ROW_NUM}',
			'${COL_NUM}',
 			'${ROW_NUM}'*'${COL_NUM}', 
			'${BARCODE}',
			'${ENABLE}',
			'${MEMO}',
			'${F_USE_CD}',
			 SYSDATE,
			'${SHELF_TYPE}'
		)
	</insert>
	<!-- 新增储区信息 -->
	<insert id="StorageInfoInsert" parameterType="hashmap">
		INSERT INTO WMS1.C_WMS_AREA_T(AREA_ID, 
                      AREA_NAME, 
                      STORE_ID, 
                      BARCODE, 
                      ENABLE, 
                      MEMO, 
                      CRT_ID, 
                      CRT_DT)
        VALUES
		(
			'${AREA_ID}',
			'${AREA_NAME}',
			'${STORE_ID}',
			'${BARCODE}',
			'${ENABLE}',
			'${MEMO}',
			'${F_USE_CD}',
			SYSDATE
		)
	</insert>
	<!-- 删除货架数据 -->
	<select id="GoodsShelfInfoDelete" parameterType="hashmap"
		resultType="java.util.HashMap">
		DELETE FROM WMS1.C_WMS_SHELF_T WS
		WHERE
		WS.SHELF_ID='${SHELF_ID}'
	</select>
	<!-- 查询出储区信息 -->
	<select id="StorageInfoQuery" parameterType="hashmap"
		resultType="java.util.HashMap">
		<include refid="oraclePagingFileTop"></include>
		T1.AREA_ID,
		T1.AREA_NAME,
		T1.STORE_ID,
		T2.STORE_NAME,
		T1.BARCODE,
		T1.ENABLE,
		T1.MEMO,
		T1.CRT_ID,
		IPLANT1.F_GET_USER_NAME(T1.CRT_ID) AS CRT_NM,
		TO_CHAR(T1.CRT_DT,'YYYY-MM-DD HH24:MI:SS') AS CRT_DT
		FROM WMS1.C_WMS_AREA_T T1	
		LEFT JOIN WMS1.C_WMS_STORE_T T2 ON T1.STORE_ID=T2.STORE_ID
		<where>
			1=1
			AND T2.ENABLE =1
			<if test="AREA_NAME !=null and AREA_NAME !=''">
				AND T1.AREA_NAME like '%${AREA_NAME}%' 
			</if>
			<if test="AREA_ID !=null and AREA_ID !=''">
				AND T1.AREA_ID like '%'||'${AREA_ID}'||'%' OR T1.STORE_ID='${AREA_ID}'
			</if>
			<if test="STORE_PID !=null and STORE_PID !=''">
				AND T1.STORE_ID='${STORE_PID}'
			</if>
			<if test="STORE_ID !=null and STORE_ID !=''">
				AND T1.STORE_ID like '${STORE_ID}%'
			</if>
			<if test="STORE_P_ID !=null and STORE_P_ID !=''">
				AND T1.AREA_ID = '${STORE_P_ID}'
			</if>
		</where>
		<include refid="oraclePagingFileBottom"></include>
	</select>
	<!-- 查询出储区信息总数 -->
	<select id="StorageInfoQuery_COUNT" parameterType="hashmap"
		resultType="java.util.HashMap">
		SELECT COUNT(1) AS ROWS_COUNT
		FROM WMS1.C_WMS_AREA_T T1	
		LEFT JOIN WMS1.C_WMS_STORE_T T2 ON T1.STORE_ID=T2.STORE_ID
		<where>
			1=1
			AND T2.ENABLE =1
			<if test="AREA_NAME !=null and AREA_NAME !=''">
				AND T1.AREA_NAME like '%${AREA_NAME}%' 
			</if>
			<if test="AREA_ID !=null and AREA_ID !=''">
				AND T1.AREA_ID like '%'||'${AREA_ID}'||'%' OR T1.STORE_ID='${AREA_ID}'
			</if>
			<if test="STORE_ID !=null and STORE_ID !=''">
				AND T1.STORE_ID like '${STORE_ID}%'
			</if>
			<if test="STORE_P_ID !=null and STORE_P_ID !=''">
				AND T1.AREA_ID = '${STORE_P_ID}'
			</if>
		</where>
	</select>
	
	<!-- 修改储区 -->
	<update id="StorageInfoInfoUpdate" parameterType="java.util.HashMap">
			update WMS1.C_WMS_AREA_T
			<set>
				<if test="AREA_NAME!=null">
					AREA_NAME='${AREA_NAME}',
				</if>
				<if test="STORE_ID!=null">
					STORE_ID='${STORE_ID}',
				</if>
				<if test="BARCODE!=null">
					BARCODE='${BARCODE}',
				</if>
				<if test="ENABLE!=null">
					ENABLE='${ENABLE}',
				</if>
				<if test="ENABLE!=null">
					STATUS='${STATUS}',
				</if>
				<if test="NOTE!=null">
					MEMO='${MEMO}',
				</if>
				CRT_ID='${F_USE_CD}',
				CRT_DT= SYSDATE
			</set>
			<where>
				AREA_ID='${AREA_ID}'
			</where>
	</update>
	<!-- 删除储区数据 -->
	<select id="StorageInfoInfoDelete" parameterType="hashmap" resultType="java.util.HashMap">
		DELETE FROM WMS1.C_WMS_AREA_T WHERE AREA_ID='${AREA_ID}'
	</select>
	<!-- 查询货位的树形结构 -->
	<select id="PositionMenuInfoQuery" parameterType="hashmap" resultType="java.util.HashMap">
		SELECT STATUS,ST_C_CD,ST_C_NM,ST_P_CD FROM
   		(SELECT '1' AS STATUS,WH.STORE_ID AS ST_C_CD, WH.STORE_NAME AS ST_C_NM,'N/A' AS ST_P_CD FROM WMS1.C_WMS_STORE_T WH WHERE WH.ENABLE = '1' UNION ALL
    	SELECT '2' AS STATUS,WS.AREA_ID AS ST_C_CD,WS.AREA_NAME AS ST_C_NM,WS.STORE_ID AS ST_P_CD FROM WMS1.C_WMS_AREA_T WS WHERE WS.ENABLE = '1' UNION ALL
    	SELECT '3' AS STATUS,SH.SHELF_ID AS ST_C_CD,SH.SHELF_NAME AS ST_C_NM,SH.AREA_ID AS ST_P_CD FROM WMS1.C_WMS_SHELF_T SH WHERE SH.ENABLE = '1')CC ORDER BY CC.ST_C_CD
	</select>

	<!-- 查询储区的树形结构 -->
	<select id="StoreMenuInfoQuery" parameterType="hashmap" resultType="java.util.HashMap">
		SELECT WH.STORE_ID AS ST_C_CD ,WH.STORE_NAME AS ST_C_NM, 'N/A' AS ST_P_CD FROM WMS1.C_WMS_STORE_T WH WHERE WH.ENABLE = '1'
	</select>
	<!-- 查询货架的树形结构 -->
	<select id="ShelfMenuInfoQuery" parameterType="hashmap" resultType="java.util.HashMap">
	   SELECT T1.* FROM (
	    SELECT '1' AS STATUS, WH.STORE_ID AS ST_C_CD, WH.STORE_NAME AS ST_C_NM, 'N/A' AS ST_P_CD FROM WMS1.C_WMS_STORE_T WH WHERE WH.ENABLE = '1'
		UNION ALL
		SELECT '2' AS STATUS, WS.AREA_ID AS ST_C_CD, WS.AREA_NAME AS ST_C_NM, WS.STORE_ID AS ST_P_CD FROM WMS1.C_WMS_AREA_T WS WHERE WS.ENABLE = '1'
		)T1 ORDER BY T1.STATUS ,T1.ST_C_CD ASC
	</select>

	<!-- 查询货架的货位信息 -->
	<select id="queryShelfPositionInfo" parameterType="hashmap" resultType="java.util.HashMap">
		<include refid="oraclePagingFileTop"></include>
		WS.SHELF_ID AS SHELFID,WS.SHELF_NAME AS SHELFNAME,WP.LOCATION_ID AS LOCATIONID,WP.LOCATION_NAME AS LOCATIONNAME,WS.ROW_NUM AS RNUM,WS.COL_NUM AS CNUM,WS.LOCATION_NUM LOTNUM,WP.ROW_ID AS ROID,WP.COL_ID AS COID,NVL(WP.BARCODE, '') AS BARCODE,
       	CASE WHEN WP.ENABLE ='1' THEN '启用' WHEN WP.ENABLE ='0' THEN '停用' END  AS ENABLES,CASE WHEN WP.STATUS = 'PST01.00' THEN '空位' WHEN WP.STATUS = 'PST01.01' THEN '已分配货位' WHEN WP.STATUS = 'PST01.02' THEN '已入库' WHEN WP.STATUS = 'PST01.03' THEN '下架' END AS STATUS,
        T1.QTY FROM WMS1.C_WMS_LOCATION_T WP LEFT JOIN WMS1.C_WMS_SHELF_T WS ON WS.SHELF_ID = WP.SHELF_ID LEFT JOIN (SELECT T.LOCATION_ID, COUNT(T1.MATERIAL_ID) AS QTY FROM WMS1.C_WMS_LOCATION_T T LEFT JOIN WMS1.R_WMS_STORE_SN_T T1 ON T.LOCATION_ID = T1.LOCATION_ID 
        and t1.offshelf_status=0
        GROUP BY T.LOCATION_ID) T1 ON T1.LOCATION_ID = WP.LOCATION_ID
		<where>1=1
		 	<if test="SHELF_ID !=null and SHELF_ID !='' "> AND WP.SHELF_ID = '${SHELF_ID}'</if>
		  	<if test="STORE_ID !=null and STORE_ID !='' "> AND WP.STORE_ID = '${STORE_ID}'</if>
		  	<if test="AREA_ID !=null and AREA_ID !='' "> AND WP.AREA_ID = '${AREA_ID}'</if>
		 	<if test="LOCATION_ID !=null and LOCATION_ID !='' "> AND WP.LOCATION_ID = '${LOCATION_ID}'</if>
	     	<if test="ROID !=null and ROID !='' "> AND WP.ROW_ID = '${ROID}'</if>
	     	<if test="COID !=null and COID !='' "> AND WP.COL_ID = '${COID}'</if>
		</where>
		ORDER BY WP.LOCATION_ID
		<include refid="oraclePagingFileBottom"></include>
	</select>
	<select id="queryShelfPositionInfo_COUNT" parameterType="hashmap" resultType="java.util.HashMap">
		SELECT COUNT(1) AS ROWS_COUNT FROM WMS1.C_WMS_LOCATION_T WP 
		<where>1=1
		 	<if test="SHELF_ID !=null and SHELF_ID !='' "> AND WP.SHELF_ID = '${SHELF_ID}'</if>
		  	<if test="STORE_ID !=null and STORE_ID !='' "> AND WP.STORE_ID = '${STORE_ID}'</if>
		  	<if test="AREA_ID !=null and AREA_ID !='' "> AND WP.AREA_ID = '${AREA_ID}'</if>
		 	<if test="LOCATION_ID !=null and LOCATION_ID !='' "> AND WP.LOCATION_ID = '${LOCATION_ID}'</if>
	     	<if test="ROID !=null and ROID !='' "> AND WP.ROW_ID = '${ROID}'</if>
	    	<if test="COID !=null and COID !='' "> AND WP.COL_ID = '${COID}'</if>
		</where>
	</select>
	<!-- 查询货架的标签是否重复 -->
	<select id="queryShelfPositionInfoBcode" parameterType="hashmap" resultType="java.util.HashMap">
		SELECT   count(*)  AS COUNT FROM WMS1.C_WMS_LOCATION_T WP
		<where>1=1
		  	<if test="BARCODE !=null and BARCODE !='' "> AND WP.BARCODE = '${BARCODE}'</if>
		</where>
		union all
		SELECT count(*) AS COUNT FROM wms1.c_wms_area_t wm
		<where>1=1
		  	<if test="BARCODE !=null and BARCODE !='' "> AND wm.BARCODE = '${BARCODE}'</if>
		</where>
	</select>
	<!-- 查询货位的物料信息 -->
	<select id="queryShelfPositionMaInfo" parameterType="hashmap" resultType="java.util.HashMap">
		<include refid="oraclePagingFileTop"></include>
		T.SERIAL_NUMBER,T.MATERIAL_ID,T.MATERIAL_NAME,T.SUPPLIER_ID,T.SUPPLIER_NAME,T.QTY,T.UNIT_ID,T.UNIT_NAME FROM WMS1.R_WMS_STORE_SN_T  T
		<where>1=1 AND T.OFFSHELF_STATUS = 0
		 	<if test="LOCATION_ID !=null and LOCATION_ID !='' "> AND T.location_id = '${LOCATION_ID}'</if>
		 	<if test="AREA_ID !=null and AREA_ID !='' "> AND T.AREA_ID = '${AREA_ID}'</if>
		</where>
		<include refid="oraclePagingFileBottom"></include>
	</select>
	<select id="queryShelfPositionMaInfo_COUNT" parameterType="hashmap" resultType="java.util.HashMap">
		select count(1) as rows_count FROM WMS1.R_WMS_STORE_SN_T  T
		<where>1=1  AND T.OFFSHELF_STATUS = 0
		 	<if test="LOCATION_ID !=null and LOCATION_ID !='' "> AND T.location_id = '${LOCATION_ID}'</if>
		 	<if test="AREA_ID !=null and AREA_ID !='' "> AND T.AREA_ID = '${AREA_ID}'</if>
	    </where>
	</select>
	<!-- 添加货架的货位信息 -->
	<insert id="AddShelfPositionInfo" parameterType="java.util.List">
		INSERT INTO WMS1.C_WMS_LOCATION_T
		(
		LOCATION_ID,
		LOCATION_NAME,
		ROW_ID,
		COLUMN_ID,
		STATUS,
		STORE_ID,
		STORE_NAME,
		AREA_ID,
		AREA_NAME,
		SHELF_ID,
		SHELF_NAME,
<!-- 		MATERIA_ID, -->
<!-- 		MATERIA_NAME, -->
		ENABLE,
		MEMO,
		CRT_ID,
		CRT_DT,
		)
		(
		<foreach collection="list" item="item" index="index"
			separator="union all">
			SELECT
			WMS1.C_GET_UNIQUE_ID(),
			'${item.ROW_ID}',
			'${item.COLUMN_ID}',
			'${item.STATUS}',
			'${STORE_ID}',
			'${STORE_NAME}',
			'${AREA_ID}',
			'${AREA_NAME}',
			'${SHELF_ID}',
			'${SHELF_NAME}',
<!-- 			'${MATERIA_ID}', -->
<!-- 			'${MATERIA_NAME}', -->
			'${ENABLE}',
			'${MEMO}',
			'${F_USE_CD}',
			SYSDATE
			FROM DUAL
		</foreach>
		)
	</insert>
	<!-- 下拉框查询仓库信息 -->
	<select id="ComboBoxWarehouseInfoQuery" parameterType="hashmap" resultType="java.util.HashMap">
    	select STORE_ID,STORE_NAME,ENABLE,MEMO FROM WMS1.C_WMS_STORE_T 
    	<where> ENABLE='1'
    	    <if test=" storeType !=null and storeType !=''"> AND STORE_TYPE_ID = '${storeType}' or STORE_TYPE_ID = '${storeTypes}'</if>
    	</where>
	</select>
	<!-- 下拉框查询出储区信息 -->
	<select id="ComboBoxStorageInfoQuery" parameterType="hashmap" resultType="java.util.HashMap">
		select AREA_ID,AREA_NAME,ENABLE FROM WMS1.C_WMS_AREA_T where ENABLE='1'
	</select>
	<!-- 查询表单模板数据 -->
	 <select id="FormTemplateInfoQuery" parameterType="hashmap" resultType="java.util.HashMap">
	 	<include refid="oraclePagingFileTop"></include>
	 	FORM_NAME,FORM_ELEMENTS,CREATE_DATE FROM IPLANT1.FORM_TEMPLATE
		<include refid="oraclePagingFileBottom"></include>
	</select> 
	<select id="FormTemplateInfoQuery_COUNT" parameterType="hashmap" resultType="java.util.HashMap">
		SELECT COUNT(1) AS ROWS_COUNT FROM IPLANT1.FORM_TEMPLATE
	</select>
	<!-- 标签管理 -->
	<!-- 查询标签管理信息 -->
	<select id="queryBarcodeRule" parameterType="hashmap" resultType="java.util.HashMap">
	    <include refid="oraclePagingFileTop"></include> 
	 	TEMPLATE_ID,TEMPLATE_TYPE,TEMPLATE_NAME,PREFIX_ONE,PREFIX_ONE_LENGTH,PREFIX_ONE_INIT_VALUE,PREFIX_TWO,PREFIX_TWO_LENGTH,PREFIX_TWO_INIT_VALUE,PREFIX_THREE,PREFIX_THREE_LENGTH,PREFIX_THREE_INIT_VALUE,SERIAL_NUMBER_LENGTH,SERIAL_NUMBER_INIT_VALUE,SAMPLE_VALUE FROM WMS1.WMS_BARCODE_TEMPLETE 
		<where> 1=1
			<if test="TEMPLATE_ID !=null and TEMPLATE_ID !='' "> AND TEMPLATE_ID = '${TEMPLATE_ID}'</if>
			<if test="TEMPLATE_TYPE !=null and TEMPLATE_TYPE !='' "> AND TEMPLATE_TYPE = '${TEMPLATE_TYPE}'</if>
		</where>	            	
		<include refid="oraclePagingFileBottom"></include>
	</select>
	<!-- 查询标签管理信息分页总数 -->
	<select id="queryBarcodeRule_COUNT" parameterType="hashmap" resultType="java.util.HashMap">
	   	SELECT  COUNT(1) AS ROWS_COUNT FROM WMS1.WMS_BARCODE_TEMPLETE 
		<where> 1=1
			<if test="TEMPLATE_ID !=null and TEMPLATE_ID !='' "> AND TEMPLATE_ID = '${TEMPLATE_ID}'</if>
		</where>
	</select>
	<!-- 新增标签管理信息 -->
	<insert id="insertBarcodeRule" parameterType="hashmap" >
	           INSERT INTO 
	    			WMS1.WMS_BARCODE_TEMPLETE 
	    				(
	    				    TEMPLATE_ID,
			                TEMPLATE_TYPE,
							TEMPLATE_NAME,
							PREFIX_ONE,
							PREFIX_ONE_LENGTH,
							PREFIX_ONE_INIT_VALUE,
							PREFIX_TWO,
							PREFIX_TWO_LENGTH,
							PREFIX_TWO_INIT_VALUE,
							PREFIX_THREE,
							PREFIX_THREE_LENGTH,
							PREFIX_THREE_INIT_VALUE,
							SERIAL_NUMBER_LENGTH,
							SERIAL_NUMBER_INIT_VALUE,
							SAMPLE_VALUE
	    				 )
	    			  VALUES
	    			    (	    			    
	    			     '${TEMPLATE_ID}',
	    			     '${TEMPLATE_TYPE}',
	    			     '${TEMPLATE_NAME}',
	    			     '${PREFIX_ONE}',
	    			     '${PREFIX_ONE_LENGTH}',
	    			     '${PREFIX_ONE_INIT_VALUE}',
	    			     '${PREFIX_TWO}',
	    			     '${PREFIX_TWO_LENGTH}',
	    			     '${PREFIX_TWO_INIT_VALUE}',
	    			     '${PREFIX_THREE}',
	    			     '${PREFIX_THREE_LENGTH}',
	    			     '${PREFIX_THREE_INIT_VALUE}',
	    			     '${SERIAL_NUMBER_LENGTH}',
	    			     '${SERIAL_NUMBER_INIT_VALUE}',
	    			     '${SAMPLE_VALUE}'	    			    
	    			      )	 
	
	</insert>
	<!-- 修改标签管理信息 -->
	<update id="updateBarcodeRule" parameterType="hashmap" >
	     UPDATE WMS1.WMS_BARCODE_TEMPLETE
	    			<set>	    					    					    				    				
	    				<if test="TEMPLATE_NAME !=null  ">
	    					TEMPLATE_NAME='${TEMPLATE_NAME}',
	    				</if>
	    				<if test="PREFIX_ONE !=null  ">
	    					PREFIX_ONE='${PREFIX_ONE}',
	    				</if>
	    				<if test="PREFIX_ONE_LENGTH !=null  ">
	    					PREFIX_ONE_LENGTH='${PREFIX_ONE_LENGTH}',
	    				</if>
	    				<if test="PREFIX_ONE_INIT_VALUE !=null  ">
	    					PREFIX_ONE_INIT_VALUE='${PREFIX_ONE_INIT_VALUE}',
	    				</if>
	    				<if test="PREFIX_TWO !=null  ">
	    					PREFIX_TWO='${PREFIX_TWO}',
	    				</if>
	    				<if test="PREFIX_TWO_LENGTH !=null  ">
	    					PREFIX_TWO_LENGTH='${PREFIX_TWO_LENGTH}',
	    				</if>
	    				<if test="PREFIX_TWO_INIT_VALUE !=null  ">
	    					PREFIX_TWO_INIT_VALUE='${PREFIX_TWO_INIT_VALUE}',
	    				</if>
	    				<if test="PREFIX_THREE !=null  ">
	    					PREFIX_THREE='${PREFIX_THREE}',
	    				</if>
	    				<if test="PREFIX_THREE_LENGTH !=null  ">
	    					PREFIX_THREE_LENGTH='${PREFIX_THREE_LENGTH}',
	    				</if>
	    				<if test="PREFIX_THREE_INIT_VALUE !=null  ">
	    					PREFIX_THREE_INIT_VALUE='${PREFIX_THREE_INIT_VALUE}',
	    				</if>
	    				<if test="SERIAL_NUMBER_LENGTH !=null  ">
	    					SERIAL_NUMBER_LENGTH='${SERIAL_NUMBER_LENGTH}',
	    				</if>
	    				<if test="SERIAL_NUMBER_INIT_VALUE !=null  ">
	    					SERIAL_NUMBER_INIT_VALUE='${SERIAL_NUMBER_INIT_VALUE}',
	    				</if>
	    				<if test="SAMPLE_VALUE !=null  ">
	    					SAMPLE_VALUE='${SAMPLE_VALUE}',
	    				</if>
	    		   </set>
	    		   <where>
	    			   TEMPLATE_TYPE='${TEMPLATE_TYPE}'
	    		   </where>
	</update>
	<!-- 删除标签管理信息 -->
	<delete id="deleteBarcodeRule" parameterType="hashmap" >
	       DELETE WMS1.WMS_BARCODE_TEMPLETE
	             	<where>
	             		TEMPLATE_ID='${TEMPLATE_ID}'
	             	</where>
	</delete>
	<!-- 标签管理树形结构 -->
	<select id="queryBarcodeRuleTree" parameterType="hashmap" resultType="java.util.HashMap">
	     SELECT 
		       T1.DICT_CD AS ST_C_CD ,
		       T1.DICT_NM AS ST_C_NM, 
		       'N/A' AS ST_P_CD
		 FROM IPLANT1.C_IPLANT_DM_T T1 WHERE T1.USE_YN = 'Y' AND DICT_CD='BCR01'
		    UNION ALL
		 SELECT
		    T2.DICT_IT AS ST_C_CD, 
		    T2.DICT_IT_NM AS ST_C_NM, 
		    T2.DICT_CD AS ST_P_CD
		 FROM IPLANT1.C_IPLANT_DD_T T2 WHERE T2.USE_YN = 'Y' AND DICT_CD='BCR01'
   </select>
	
	<!-- 抽样方案 -->
	<!-- 查询抽样标准信息 -->
	<select id="querySampleStandInfo" parameterType="hashmap"
		resultType="java.util.HashMap">
		SELECT * FROM(
		SELECT
		T1.SAMPLE_MIN_NUMBER||'~'||T1.SAMPLE_MAX_NUMBER AS NUM,
		(SELECT SAMPLE_CODE FROM WMS1.WMS_SAMPLE_STAND T2 WHERE
		T2.SAMPLE_LEVEL='S-1'AND
		T1.SAMPLE_MIN_NUMBER||'~'||T1.SAMPLE_MAX_NUMBER=T2.SAMPLE_MIN_NUMBER||'~'||T2.SAMPLE_MAX_NUMBER)
		AS S1,
		(SELECT SAMPLE_CODE FROM WMS1.WMS_SAMPLE_STAND T2 WHERE
		T2.SAMPLE_LEVEL='S-2'AND
		T1.SAMPLE_MIN_NUMBER||'~'||T1.SAMPLE_MAX_NUMBER=T2.SAMPLE_MIN_NUMBER||'~'||T2.SAMPLE_MAX_NUMBER)
		AS S2,
		(SELECT SAMPLE_CODE FROM WMS1.WMS_SAMPLE_STAND T2 WHERE
		T2.SAMPLE_LEVEL='S-3'AND
		T1.SAMPLE_MIN_NUMBER||'~'||T1.SAMPLE_MAX_NUMBER=T2.SAMPLE_MIN_NUMBER||'~'||T2.SAMPLE_MAX_NUMBER)
		AS S3,
		(SELECT SAMPLE_CODE FROM WMS1.WMS_SAMPLE_STAND T2 WHERE
		T2.SAMPLE_LEVEL='S-4'AND
		T1.SAMPLE_MIN_NUMBER||'~'||T1.SAMPLE_MAX_NUMBER=T2.SAMPLE_MIN_NUMBER||'~'||T2.SAMPLE_MAX_NUMBER)
		AS S4,
		(SELECT SAMPLE_CODE FROM WMS1.WMS_SAMPLE_STAND T2 WHERE
		T2.SAMPLE_LEVEL='Ⅰ'AND
		T1.SAMPLE_MIN_NUMBER||'~'||T1.SAMPLE_MAX_NUMBER=T2.SAMPLE_MIN_NUMBER||'~'||T2.SAMPLE_MAX_NUMBER)
		AS S5,
		(SELECT SAMPLE_CODE FROM WMS1.WMS_SAMPLE_STAND T2 WHERE
		T2.SAMPLE_LEVEL='Ⅱ'AND
		T1.SAMPLE_MIN_NUMBER||'~'||T1.SAMPLE_MAX_NUMBER=T2.SAMPLE_MIN_NUMBER||'~'||T2.SAMPLE_MAX_NUMBER)
		AS S6,
		(SELECT SAMPLE_CODE FROM WMS1.WMS_SAMPLE_STAND T2 WHERE
		T2.SAMPLE_LEVEL='Ⅲ'AND
		T1.SAMPLE_MIN_NUMBER||'~'||T1.SAMPLE_MAX_NUMBER=T2.SAMPLE_MIN_NUMBER||'~'||T2.SAMPLE_MAX_NUMBER)
		AS S7
		FROM WMS1.WMS_SAMPLE_STAND T1
		GROUP BY T1.SAMPLE_MIN_NUMBER||'~'||T1.SAMPLE_MAX_NUMBER ) T
		ORDER BY to_number(SUBSTR( T.NUM, 1, INSTR(T.NUM,'~')-1))
	</select>
	<!-- 查询抽样方案信息 -->
	<select id="querySamplePlanInfo" parameterType="hashmap" resultType="java.util.HashMap">
		<include refid="oraclePagingFileTop"></include>
		          DD.*
		            FROM
					 (
						SELECT
						    T1.SAMPLE_ID AS SAMPLE_ID,
							T1.MATERIA_ID AS MATERIA_ID,
							T2.M_NAME AS MATERIA_NM,
							T1.SAMPLE_LEVEL AS SAMPLE_LEVEL,
							T1.SAMPLE_STAND_VALUE AS SAMPLE_STAND_VALUE,
							T1.SAMPLE_ASK AS SAMPLE_ASK
						FROM WMS1.WMS_SAMPLE_RULE T1
						left join WMS1.C_WMS_MATERIAL_FEATURE_T T2 ON T1.MATERIA_ID=T2.M_ID
						ORDER BY T1.SAMPLE_ID DESC
						)DD
				   <where> 1=1
		              <if test=" MATERIA_ID !=null and MATERIA_ID !='' ">		            	 
		            	  AND DD.MATERIA_ID LIKE '%${MATERIA_ID}%'
		              </if>
		           </where>
		       <include refid="oraclePagingFileBottom"></include> 
	</select>
    <!-- 查询抽样方案信息分页总数-->
	<select id="querySamplePlanInfo_COUNT" parameterType="hashmap" resultType="java.util.HashMap"> 
		        SELECT 
 					COUNT(1)   ROWS_COUNT
	              FROM WMS1.WMS_SAMPLE_RULE T1
						left join WMS1.C_WMS_MATERIAL_FEATURE_T T2 ON T1.MATERIA_ID=T2.M_ID
				   <where> 1=1
		              <if test=" MATERIA_ID !=null and MATERIA_ID !='' ">		            	 
		            	  AND MATERIA_ID LIKE '%${MATERIA_ID}%'
		              </if>
		          </where>
	</select>
	<!-- 新增抽样方案信息 -->
		<insert id="InsertSamplePlanInfo" parameterType="hashmap"> 
			   INSERT INTO 
					   WMS1.WMS_SAMPLE_RULE
					        (
					            SAMPLE_ID,
						        MATERIA_ID,
								SAMPLE_LEVEL,
								SAMPLE_STAND_VALUE,
								SAMPLE_ASK
					         )
					         VALUES
					         (
		                      	'${SAMPLE_ID}',
			                    '${MATERIA_ID}',
			                    '${SAMPLE_LEVEL}',
			                    '${SAMPLE_STAND_VALUE}',
					         	'${SAMPLE_ASK}'			       
		                      )
	    </insert>
	<!-- 修改抽样方案信息 -->
		<update id="UpdateSamplePlanInfo" parameterType="HashMap" >
				UPDATE WMS1.WMS_SAMPLE_RULE
					<set>
					   <if test="MATERIA_ID !=null"> 
					      MATERIA_ID='${MATERIA_ID}',
					   </if>
					   <if test="SAMPLE_LEVEL !=null"> 
					      SAMPLE_LEVEL='${SAMPLE_LEVEL}',
					   </if>
					   <if test="SAMPLE_STAND_VALUE !=null"> 
					      SAMPLE_STAND_VALUE='${SAMPLE_STAND_VALUE}',
					   </if>
					   <if test="SAMPLE_ASK !=null"> 
					      SAMPLE_ASK='${SAMPLE_ASK}',
					   </if>
					</set>
					<where> SAMPLE_ID = '${SAMPLE_ID}'</where>
		</update>
		<!-- 删除抽样方案信息 -->
		<delete id="DeleteSamplePlanInfo" parameterType="hashmap">
	             DELETE WMS1.WMS_SAMPLE_RULE
	             	<where>
	             		SAMPLE_ID='${SAMPLE_ID}'
	             	</where>  
	    </delete>
	    
	    <!-- 查询抽样方案信息分页总数-->
	<select id="querySelftMarites" parameterType="hashmap" resultType="java.util.HashMap"> 
		        SELECT COUNT(*) AS STATUS  FROM 
				(
				 SELECT SHELF_ID FROM WMS1.C_WMS_LOCATION_T   WHERE SHELF_ID='${SHELF_ID}'    	       
				)	   
	</select>
	
	<!-- 物料分类管理 -->
	<!-- 查询物料分类管理标准 -->	
	<select id="querymateriaDivideStand" parameterType="hashmap" resultType="java.util.HashMap"> 
		        SELECT 
 					DIVIDE_ID,
 					DIVIDE_TYPE,
 					DIVIDE_STANDAR,
 					MANAGE_STANDAR,
 					WMS_DEFAULT
	              FROM WMS1.WMS_MATERIA_DIVIDE
	</select>
	<!-- 查询物料分类管理 -->	
	<select id="querymateriaDivideManage" parameterType="hashmap" resultType="java.util.HashMap"> 
		       <include refid="oraclePagingFileTop"></include> 					     
                     DD.*
			       FROM
			         (SELECT
			          T1.MANAGE_ID AS MANAGE_ID,
			          T1.MATERIA_ID AS MATERIA_ID,
			          T2.MATERIA_NAME AS MATERIA_NM,
			          T3.DIVIDE_ID AS DIVIDE_ID,
			          T1.DIVIDE_TYPE AS DIVIDE_TYPE,
			          T1.OVER_SEND AS OVER_SEND 
			        FROM WMS1.WMS_MATERIA_DIVIDE_MANAGE T1
			        LEFT JOIN WMS1.WMS_MATERIA_PACKAGE T2 ON T1.MATERIA_ID=T2.MATERIA_ID
			        LEFT JOIN WMS1.WMS_MATERIA_DIVIDE T3 ON T1.DIVIDE_TYPE=T3.DIVIDE_TYPE
			         ORDER BY T1.MANAGE_ID DESC
			           )DD
		          <where>
		              <if test=" MATERIA_ID !=null and MATERIA_ID !='' ">		            	 
			            	  AND DD.MATERIA_ID LIKE '%${MATERIA_ID}%'
			          </if>
		          </where>	          
	        <include refid="oraclePagingFileBottom"></include> 
	</select>
	 <!-- 查询物料分类管理分页总数-->
	<select id="querymateriaDivideManage_COUNT" parameterType="hashmap" resultType="java.util.HashMap"> 
		        SELECT 
 					COUNT(1)   ROWS_COUNT
	              FROM WMS1.WMS_MATERIA_DIVIDE_MANAGE
				   <where> 1=1
		              <if test=" MATERIA_ID !=null and MATERIA_ID !='' ">		            	 
		            	  AND MATERIA_ID LIKE '%${MATERIA_ID}%'
		              </if>
		          </where>
	</select>
	<!-- 新增物料分类管理 -->
	<insert id="InsertmateriaDivideManage" parameterType="hashmap"> 
			   INSERT INTO 
					   WMS1.WMS_MATERIA_DIVIDE_MANAGE
					        (
					            MANAGE_ID,
						        MATERIA_ID,
								DIVIDE_TYPE,
								OVER_SEND
					         )
					         VALUES
					         (
		                      	'${MANAGE_ID}',
			                    '${MATERIA_ID}',
			                    '${DIVIDE_TYPE}',
					         	'${OVER_SEND}'			       
		                      )
	</insert>
	<!-- 修改物料分类管理 -->
	<update id="UpdatemateriaDivideManage" parameterType="HashMap" >
			UPDATE WMS1.WMS_MATERIA_DIVIDE_MANAGE
				<set>
					  <if test="DIVIDE_TYPE !=null"> 
					      DIVIDE_TYPE='${DIVIDE_TYPE}',
					  </if>
					  <if test="OVER_SEND !=null"> 
					      OVER_SEND='${OVER_SEND}',
					  </if>
				</set>
				<where> MANAGE_ID = '${MANAGE_ID}'</where>
	</update>
	<!-- 删除物料分类管理 -->
	<delete id="DeletemateriaDivideManage" parameterType="hashmap">
	            DELETE WMS1.WMS_MATERIA_DIVIDE_MANAGE
	             <where>
	             		MANAGE_ID='${MANAGE_ID}'
	             </where>  
	</delete>
	   <!-- 查询货位信息表 -->			
	    <!-- 初始化货位数据 -->
  <select id="initShelfPosition" parameterType="hashmap" statementType="CALLABLE" resultType="java.util.HashMap">	
		{call WMS1.WMS_BASIC_INFO.wms_create_position('${SHELFID}','${SHELFNAME}','${ROWNUM}','${COLNUM}',
					#{RC1,jdbcType=CURSOR,mode=OUT,javaType=ResultSet,resultMap=checkInResult},
    				#{errorCode,jdbcType=VARCHAR,mode=OUT,javaType=String}, 
    				#{errorMessage,jdbcType=VARCHAR,mode=OUT,javaType=String},
    				#{ROWS_COUNT,jdbcType=INTEGER,mode=OUT,javaType=Integer})}
	
  </select>

  <!-- 查询仓库货架ID-->
	<select id="queryShelfID" parameterType="hashmap" resultType="java.util.HashMap"> 
		       SELECT IPLANT1.CREATE_TYPE_SN_P.GET_SN_P('C','SH') AS SHELF_ID FROM DUAL					
	</select>
	
  <!-- 查询仓库类型ID-->
	<select id="querywarehouseTypeID" parameterType="hashmap" resultType="java.util.HashMap"> 
		       SELECT 'WH'||(IPLANT1.TRANS_10TO34_FUN(IPLANT1.WH_SEQ.NEXTVAL, 4)) AS WAREHOUSE_TYPE_ID FROM DUAL					
	</select>
	
  <!-- 查询仓库信息ID-->
	<select id="querywarehouseID" parameterType="hashmap" resultType="java.util.HashMap"> 
		       SELECT IPLANT1.CREATE_TYPE_SN_P.GET_SN_P('C','WS') AS STORE_ID FROM DUAL					
	</select>
	
  <!-- 查询生成物料分类编号-->
	<select id="queryCreatmateriaID" parameterType="hashmap" resultType="java.util.HashMap"> 
		       SELECT IPLANT1.WLFL_SEQ.NEXTVAL AS MANAGE_ID FROM DUAL					
	</select>
  <!-- 查询生成抽样编号-->
	<select id="queryCreateSampleID" parameterType="hashmap" resultType="java.util.HashMap"> 
		       SELECT IPLANT1.CY_SEQ.NEXTVAL AS SAMPLE_ID FROM DUAL					
	</select>
	
  <!-- 查询仓库唯一码和RFID关联表信息-->
	<select id="queryWareHouseRfid" parameterType="hashmap" resultType="java.util.HashMap"> 	   
	   <include refid="oraclePagingFileTop"></include> 		
        DD.*
        FROM
        (SELECT
          ID,
          BARCODE,
          RFID,
          ENABLE,         
          TO_CHAR(CREATE_DATE,'YYYY-MM-DD HH24:MI:SS') AS CREATE_DATE,
          TO_CHAR(UPDATE_DATE,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
       FROM WMS1.WMS_RFID_BARCODE
       <where>
			1=1			
			<if test="BARCODE !=null and BARCODE !='' ">
				AND BARCODE = '${BARCODE}'
			</if>
			<if test="RFID !=null and RFID !='' ">
				AND RFID='${RFID}'
			</if>
		</where>
		ORDER BY RFID 	
		)DD
       <include refid="oraclePagingFileBottom"></include> 	       					
	</select>
	<!-- 查询托盘信息分页总数 -->
	<select id="queryWareHouseRfid_COUNT" parameterType="hashmap" resultType="java.util.HashMap">
		SELECT
		COUNT(1) AS ROWS_COUNT
		FROM WMS1.WMS_RFID_BARCODE
		<where>
			1=1			
			<if test="BARCODE !=null and BARCODE !='' ">
				AND BARCODE = '${BARCODE}'
			</if>
			<if test="RFID !=null and RFID !='' ">
				AND RFID='${RFID}'
			</if>
		</where>
	</select>
	<!-- 新增仓库唯一码和RFID关联表信息 -->
	<insert id="InsertWareHouseRfid" parameterType="hashmap"> 
			   INSERT INTO 
					   WMS1.WMS_RFID_BARCODE
					        (
					         ID,
                             BARCODE,
                             RFID,
                             ENABLE,
                             CREATE_DATE
					         )
					         VALUES
					         (
		                      	'${ID}',
			                    '${BARCODE}',
			                    '${RFID}',
			                    '${ENABLE}',
			                    SYSDATE				         			       
		                      )
	</insert>
	<!-- 修改仓库唯一码和RFID关联表信息 -->
	<update id="UpdateWareHouseRfid" parameterType="HashMap" >
			UPDATE WMS1.WMS_RFID_BARCODE
				<set>
					  <if test="BARCODE !=null"> 
					      BARCODE='${BARCODE}',
					  </if>
					  <if test="RFID !=null"> 
					      RFID='${RFID}',
					  </if>
					  <if test="ENABLE !=null"> 
					      ENABLE='${ENABLE}',
					  </if>
					  UPDATE_DATE=SYSDATE
				</set>
				<where> ID = '${ID}'</where>
	</update>
	<!-- 删除仓库唯一码和RFID关联表信息 -->
	<delete id="DeleteWareHouseRfid" parameterType="hashmap">
	            DELETE WMS1.WMS_RFID_BARCODE
	             <where>
	             		ID='${ID}'
	             </where>  
	</delete>
	<!-- 查询生成RFID表ID-->
	<select id="CreatRFID_ID" parameterType="hashmap" resultType="java.util.HashMap"> 
		       SELECT MES1.RFID_SEQ.NEXTVAL AS ID FROM DUAL					
	</select>
	
	<!-- 查询仓储出入库中间表信息-->
	<select id="queryWMSWCSlink" parameterType="hashmap" resultType="java.util.HashMap"> 	   
	   <include refid="oraclePagingFileTop"></include> 		
        DD.*
        FROM
        (SELECT
          TEMP_ID,
          SHELF_ID,
          SHELF_NAME,          
          ROW_ID,
          COLUMN_ID,
          BARCODE,
          DIRECT,
          OPERATE_STATUS,
          DATA_STATUS,        
          TO_CHAR(CREATE_TIME,'YYYY-MM-DD HH24:MI:SS') AS CREATE_TIME,
          TO_CHAR(UPDATE_TIME,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_TIME,
          DETAIL
       FROM WMS1.WMS_COM_TEMP
       <where>
			1=1	
			AND SHELF_NAME IN ('A1货架','A2货架')		
			<if test="TEMP_ID !=null and TEMP_ID !='' ">
				AND TEMP_ID = '${TEMP_ID}'
			</if>
			<if test="SHELF_NAME !=null and SHELF_NAME !='' ">
				AND SHELF_NAME LIKE '%${SHELF_NAME}%'
			</if>
			<if test="BARCODE !=null and BARCODE !='' ">
				AND BARCODE='${BARCODE}'
			</if>
			<if test="ROW_ID !=null and ROW_ID !='' ">
				AND ROW_ID='${ROW_ID}'
			</if>
			<if test="DIRECT !=null and DIRECT !='' ">
				AND DIRECT='${DIRECT}'
			</if>
			<if test="OPERATE_STATUS !=null and OPERATE_STATUS !='' ">
				AND OPERATE_STATUS='${OPERATE_STATUS}'
			</if>
			<if test="DATA_STATUS !=null and DATA_STATUS !='' ">
				AND DATA_STATUS='${DATA_STATUS}'
			</if>
		</where>
		ORDER BY DIRECT DESC, BARCODE 	
		)DD
       <include refid="oraclePagingFileBottom"></include> 	       					
	</select>
	<!-- 查询仓储出入库中间表信息分页总数 -->
	<select id="queryWMSWCSlink_COUNT" parameterType="hashmap" resultType="java.util.HashMap">
		SELECT
		COUNT(1) AS ROWS_COUNT
		 FROM WMS1.WMS_COM_TEMP
		  <where>
			1=1	
			AND SHELF_NAME IN ('A1货架','A2货架')		
			<if test="TEMP_ID !=null and TEMP_ID !='' ">
				AND TEMP_ID = '${TEMP_ID}'
			</if>
			<if test="SHELF_NAME !=null and SHELF_NAME !='' ">
				AND SHELF_NAME LIKE '%${SHELF_NAME}%'
			</if>
			<if test="BARCODE !=null and BARCODE !='' ">
				AND BARCODE='${BARCODE}'
			</if>
			<if test="ROW_ID !=null and ROW_ID !='' ">
				AND ROW_ID='${ROW_ID}'
			</if>
			<if test="DIRECT !=null and DIRECT !='' ">
				AND DIRECT='${DIRECT}'
			</if>
			<if test="OPERATE_STATUS !=null and OPERATE_STATUS !='' ">
				AND OPERATE_STATUS='${OPERATE_STATUS}'
			</if>
			<if test="DATA_STATUS !=null and DATA_STATUS !='' ">
				AND DATA_STATUS='${DATA_STATUS}'
			</if>
		</where>
	</select>
	<!-- 新增仓储出入库中间表信息 -->
	<insert id="InsertWMSWCSlink" parameterType="hashmap"> 
			   INSERT INTO 
					   WMS1.WMS_COM_TEMP
					        (
					          TEMP_ID,
					          SHELF_ID,
					          SHELF_NAME,
					          ROW_ID,
					          COLUMN_ID,
					          BARCODE,
					          DIRECT,
					          OPERATE_STATUS,
					          DATA_STATUS,  
					          DETAIL,
                              CREATE_TIME
					         )
					         VALUES
					         (
		                      	'${TEMP_ID}',
			                    '${SHELF_ID}',
			                    '${SHELF_NAME}',			                    
			                    '${ROW_ID}',
			                    '${COLUMN_ID}',
			                    '${BARCODE}',
			                    '${DIRECT}',
			                    '${OPERATE_STATUS}',
			                    '${DATA_STATUS}',
			                    '${DETAIL}',
			                    SYSDATE				         			       
		                      )
	</insert>
	<!-- 修改仓储出入库中间表信息息 -->
	<update id="UpdateWMSWCSlink" parameterType="HashMap" >
			UPDATE WMS1.WMS_COM_TEMP
				<set>
					  <if test="SHELF_ID !=null"> 
					      SHELF_ID='${SHELF_ID}',
					  </if>
					   <if test="SHELF_NAME !=null"> 
					      SHELF_NAME='${SHELF_NAME}',
					  </if>
					  <if test="ROW_ID !=null"> 
					      ROW_ID='${ROW_ID}',
					  </if>	
					  <if test="COLUMN_ID !=null"> 
					      COLUMN_ID='${COLUMN_ID}',
					  </if>
					  <if test="BARCODE !=null"> 
					      BARCODE='${BARCODE}',
					  </if>
					  <if test="DIRECT !=null"> 
					      DIRECT='${DIRECT}',
					  </if>	
					  <if test="OPERATE_STATUS !=null"> 
					      OPERATE_STATUS='${OPERATE_STATUS}',
					  </if>	
					  <if test="DATA_STATUS !=null"> 
					      DATA_STATUS='${DATA_STATUS}',
					  </if>	
					  <if test="DETAIL !=null"> 
					      DETAIL='${DETAIL}',
					  </if>	
					  UPDATE_TIME=SYSDATE				  
				</set>
				<where> TEMP_ID = '${TEMP_ID}'</where>
	</update>
	<!-- 删除仓储出入库中间表信息 -->
	<delete id="DeleteWMSWCSlink" parameterType="hashmap">
	            DELETE WMS1.WMS_COM_TEMP
	             <where>
	             		TEMP_ID='${TEMP_ID}'
	             </where>  
	</delete>
	<!-- 查询生成仓储出入库中间表信息ID-->
	<select id="CreatWMSWCSlink_ID" parameterType="hashmap" resultType="java.util.HashMap"> 
		       SELECT WMS1.WMSWCS_SEQ.NEXTVAL AS M_OUT_ID FROM DUAL					
	</select>
	
	<!-- 查询货位信息-->
	<select id="CXHW" parameterType="hashmap" resultType="java.util.HashMap"> 
		    SELECT 
				  LOCATION_ID,
				  LOCATION_NAME,
				  ROW_ID,
				  COLUMN_ID,
				  SHELF_ID
           FROM WMS1.C_WMS_LOCATION_T
           <where>1=1
             <if test="SHELF_ID !=null and SHELF_ID !='' ">
				AND SHELF_ID = '${SHELF_ID}'
			</if>
			<if test="LOCATION_ID !=null and LOCATION_ID !='' ">
				AND LOCATION_ID = '${LOCATION_ID}'
			</if>
           </where>					
	</select>	
	
	<!-- 查询仓库库存-->
	<select id="queryWarehouseStock" parameterType="hashmap" resultType="java.util.HashMap"> 
	    <include refid="oraclePagingFileTop"></include> 				       
					 A.MATERIA_ID,
					 A.MATERIA_NAME,
					 A.SN_NUMBER,
					 A.BARCODE,
					 B.SHELF_ID,
					 J.STORE_NAME,
					 I.STORE_ID,
					 A.PACKAGE_CAPACITY AS PACKNUMBER,					 
					 TO_CHAR(A.CREATE_DATE,'YYYY-MM-DD HH24:MI:SS') AS CREATE_DATE
					FROM WMS1.WMS_CHECKIN_PACKAGE A
					LEFT JOIN WMS1.C_WMS_LOCATION_T B ON A.LOCATION_ID=B.LOCATION_ID
					LEFT JOIN WMS1.C_WMS_SHELF_T H ON B.SHELF_ID=H.SHELF_ID
					LEFT JOIN WMS1.C_WMS_AREA_T I ON I.AREA_ID=H.AREA_ID
					LEFT JOIN WMS1.C_WMS_STORE_T J ON I.STORE_ID=J.STORE_ID					
		       <where>
					CHECKIN_STATUS='ENT01.04' 
					AND I.STORE_ID IS NOT NULL		
					<if test="STORE_ID !=null and STORE_ID !='' ">
						AND I.STORE_ID = '${STORE_ID}'
					</if>					
					<if test="MATERIA_ID !=null and MATERIA_ID !='' ">
						AND A.MATERIA_ID='${MATERIA_ID}'
					</if>
					<if test="MATERIA_NAME !=null and MATERIA_NAME !='' ">
						AND A.MATERIA_NAME LIKE '%${MATERIA_NAME}%'
					</if>
					<if test="BARCODE !=null and BARCODE !='' ">
						AND A.BARCODE='${BARCODE}'
					</if>
				</where>				
       <include refid="oraclePagingFileBottom"></include> 	
	</select>	
	
	<!-- 查询仓库库存分页总数 -->
	<select id="queryWarehouseStock_COUNT" parameterType="hashmap" resultType="java.util.HashMap">
		SELECT
		    COUNT(1) AS ROWS_COUNT
		 FROM WMS1.WMS_CHECKIN_PACKAGE A
					LEFT JOIN WMS1.C_WMS_LOCATION_T B ON A.LOCATION_ID=B.LOCATION_ID
					LEFT JOIN WMS1.C_WMS_SHELF_T H ON B.SHELF_ID=H.SHELF_ID
					LEFT JOIN WMS1.C_WMS_AREA_T I ON I.AREA_ID=H.AREA_ID
					LEFT JOIN WMS1.C_WMS_STORE_T J ON I.STORE_ID=J.STORE_ID					
		       <where>
					CHECKIN_STATUS='ENT01.04' 
					AND I.STORE_ID IS NOT NULL		
					<if test="STORE_ID !=null and STORE_ID !='' ">
						AND I.STORE_ID = '${STORE_ID}'
					</if>					
					<if test="MATERIA_ID !=null and MATERIA_ID !='' ">
						AND A.MATERIA_ID='${MATERIA_ID}'
					</if>
					<if test="MATERIA_NAME !=null and MATERIA_NAME !='' ">
						AND A.MATERIA_NAME LIKE '%${MATERIA_NAME}%'
					</if>
					<if test="BARCODE !=null and BARCODE !='' ">
						AND A.BARCODE='${BARCODE}'
					</if>
				</where>
	</select>
	
	<!-- 查询仓库库存汇总-->
	<select id="querySumWarehouseStock" parameterType="hashmap" resultType="java.util.HashMap"> 
	    <include refid="oraclePagingFileTop"></include>  
		     TT.*
		    FROM(
		     SELECT
		       CC.*,
               T.ITEM_SIZE
              FROM
		      (
		        SELECT 
					DD.MATERIA_ID,
					DD.MATERIA_NAME,
					SUM(NVL(DD.PACKNUMBER,0))      AS STOCK 
				FROM 
					(
					SELECT 
						 A.MATERIA_ID,
						 A.MATERIA_NAME,
						 B.SHELF_ID,
						 I.STORE_ID,
						 A.PACKAGE_CAPACITY AS PACKNUMBER
                    FROM WMS1.WMS_CHECKIN_PACKAGE A
                    LEFT JOIN WMS1.C_WMS_LOCATION_T B ON A.LOCATION_ID=B.LOCATION_ID
					LEFT JOIN WMS1.C_WMS_SHELF_T H ON B.SHELF_ID=H.SHELF_ID
					LEFT JOIN WMS1.C_WMS_AREA_T I ON I.AREA_ID=H.AREA_ID
					<where>
					CHECKIN_STATUS='ENT01.04'	
					AND I.STORE_ID IS NOT NULL	
					<if test="STORE_ID !=null and STORE_ID !='' ">
						AND I.STORE_ID = '${STORE_ID}'
					</if>					
					<if test="MATERIA_ID !=null and MATERIA_ID !='' ">
						AND A.MATERIA_ID='${MATERIA_ID}'
					</if>
					<if test="MATERIA_NAME !=null and MATERIA_NAME !='' ">
						AND A.MATERIA_NAME LIKE '%${MATERIA_NAME}%'
					</if>
					<if test="BARCODE !=null and BARCODE !='' ">
						AND A.BARCODE='${BARCODE}'
					</if>
				</where>
					  )DD
				GROUP BY MATERIA_ID,MATERIA_NAME)CC
                LEFT JOIN MES1.R_MES_ITEM_T T ON CC.MATERIA_ID=T.ITEM_CD
				)TT		       				
       <include refid="oraclePagingFileBottom"></include> 	
	</select>
	
	<!-- 查询仓库库存汇总分页总数 -->
	<select id="querySumWarehouseStock_COUNT" parameterType="hashmap" resultType="java.util.HashMap">
		SELECT
		    COUNT(1) AS ROWS_COUNT
		 FROM 
			 (
		       SELECT
			       CC.*,
	               T.ITEM_SIZE
               FROM
		      (
		        SELECT 
					DD.MATERIA_ID,
					DD.MATERIA_NAME,
					SUM(NVL(DD.PACKNUMBER,0))      AS STOCK 
				FROM 
					(
					SELECT 
						 A.MATERIA_ID,
						 A.MATERIA_NAME,
						 B.SHELF_ID,
						 I.STORE_ID,
						 A.PACKAGE_CAPACITY AS PACKNUMBER
                    FROM WMS1.WMS_CHECKIN_PACKAGE A
                    LEFT JOIN WMS1.C_WMS_LOCATION_T B ON A.LOCATION_ID=B.LOCATION_ID
					LEFT JOIN WMS1.C_WMS_SHELF_T H ON B.SHELF_ID=H.SHELF_ID
					LEFT JOIN WMS1.C_WMS_AREA_T I ON I.AREA_ID=H.AREA_ID
					<where>
					CHECKIN_STATUS='ENT01.04'	
					AND I.STORE_ID IS NOT NULL	
					<if test="STORE_ID !=null and STORE_ID !='' ">
						AND I.STORE_ID = '${STORE_ID}'
					</if>					
					<if test="MATERIA_ID !=null and MATERIA_ID !='' ">
						AND A.MATERIA_ID='${MATERIA_ID}'
					</if>
					<if test="MATERIA_NAME !=null and MATERIA_NAME !='' ">
						AND A.MATERIA_NAME LIKE '%${MATERIA_NAME}%'
					</if>
					<if test="BARCODE !=null and BARCODE !='' ">
						AND A.BARCODE='${BARCODE}'
					</if>
				</where>
					  )DD
				GROUP BY MATERIA_ID,MATERIA_NAME)CC
                LEFT JOIN MES1.R_MES_ITEM_T T ON CC.MATERIA_ID=T.ITEM_CD
                )TT	
	</select>
	
	<!-- 查询条码追溯记录-->
	<select id="queryBARCODEZS" parameterType="hashmap" resultType="java.util.HashMap"> 
	    <include refid="oraclePagingFileTop"></include>  
		     CC.*
		    FROM(		     
				SELECT 
			      FF.*,
			      TT.LINGLIAOMO,  
			      TT.LINGLIAOSUM,
			      HH.MO,
			      HH.FDNO,
			      HH.ZWNO,
			      HH.SHANGLIAOSUM,
			      HH.SHANGLIAOMEM,
			      HH.SHANGLIAOTIME,
			      EE.TUILIAOMO,
			      EE.TUILIAOSUM,
			      EE.TUILIAOMEM,
			      EE.TUILIAOTIME
			     FROM
			      (SELECT DISTINCT DD.BARCODE,
			                        DD.MATERIA_ID,
			                        DD.MATERIA_NAME,
			                        DD.LAILIAOSUM AS LAILIAOSUM,
			                        DD.STORE_NAME,
			                        null AS RUKUNUM,
			                        NULL AS INTIME,
			                        NULL AS FALIAOWO,
			                        NULL AS FALIAOMO,
			                        null AS CHUKUNUM,
			                        NULL AS OUTTIME,
			                        A3.SUP_NM AS SUPPLIER_NAME
			          FROM (SELECT A1.BARCODE,
			                       A1.MATERIA_ID,
			                       A1.MATERIA_NAME,
			                       A1.ORDER_ID,
			                       A1.PACKAGE_CAPACITY AS LAILIAOSUM,
			                       A4.STORE_NAME,
			                       '' AS RUKUNUM,
			                       '' AS INTIME,
			                       '' AS CHUKUNUM,
			                       '' AS OUTTIME
			                  FROM WMS1.WMS_CHECKIN_PACKAGE A1
			                  LEFT JOIN WMS1.C_WMS_LOCATION_T B
			                    ON A1.LOCATION_ID = B.LOCATION_ID
			                  LEFT JOIN WMS1.C_WMS_SHELF_T H
			                    ON B.SHELF_ID = H.SHELF_ID
			                  LEFT JOIN WMS1.C_WMS_AREA_T I
			                    ON I.AREA_ID = H.AREA_ID
			                  LEFT JOIN WMS1.C_WMS_STORE_T A4
			                    ON I.STORE_ID = A4.STORE_ID
			                  WHERE A1.CHECKIN_STATUS IN ('ENT01.01', 'ENT01.02','ENT01.03') 
			                 ) DD
			          LEFT JOIN WMS1.WMS_ORDER_DETAIL A2
			            ON DD.ORDER_ID = A2.ORDER_ID
			          LEFT JOIN IPLANT1.C_IPLANT_S3_T A3
			            ON A2.SUPPLIER_ID = A3.SUP_CD
			        UNION ALL
			        SELECT DISTINCT DD.BARCODE,
			                        DD.MATERIA_ID,
			                        DD.MATERIA_NAME,
			                        null AS LAILIAOSUM,
			                        DD.STORE_NAME,
			                        DD.RUKUNUM AS RUKUNUM,
			                        TO_CHAR(DD.INTIME,'YYYY-MM-DD HH24:MI:SS') AS INTIME,
			                        NULL AS FALIAOWO,
			                        NULL AS FALIAOMO,
			                        null AS CHUKUNUM,
			                        NULL AS OUTTIME,
			                        NULL AS SUPPLIER_NAME
			          FROM (SELECT A1.BARCODE,
			                       A1.MATERIA_ID,
			                       A1.MATERIA_NAME,
			                       A1.ORDER_ID,
			                       null AS LAILIAOSUM,
			                       A4.STORE_NAME,
			                       A1.PACKAGE_CAPACITY AS RUKUNUM,
			                       A1.UPDATE_DATE AS INTIME,
			                       null AS CHUKUNUM,
			                       NULL AS OUTTIME
			                  FROM WMS1.WMS_CHECKIN_PACKAGE A1
			                  LEFT JOIN WMS1.C_WMS_LOCATION_T B
			                    ON A1.LOCATION_ID = B.LOCATION_ID
			                  LEFT JOIN WMS1.C_WMS_SHELF_T H
			                    ON B.SHELF_ID = H.SHELF_ID
			                  LEFT JOIN WMS1.C_WMS_AREA_T I
			                    ON I.AREA_ID = H.AREA_ID
			                  LEFT JOIN WMS1.C_WMS_STORE_T A4
			                    ON I.STORE_ID = A4.STORE_ID
			                  WHERE A1.CHECKIN_STATUS IN  ('ENT01.04', 'ENT01.08') 
			                         ) DD
			          LEFT JOIN WMS1.WMS_ORDER_DETAIL A2
			            ON DD.ORDER_ID = A2.ORDER_ID
			          LEFT JOIN IPLANT1.C_IPLANT_S3_T A3
			            ON A2.SUPPLIER_ID = A3.SUP_CD
			        UNION ALL
			        SELECT DISTINCT DD.BARCODE,
			                        DD.MATERIA_ID,
			                        DD.MATERIA_NAME,
			                        null AS LAILIAOSUM,
			                        DD.STORE_NAME,
			                        null AS RUKUNUM,
			                        NULL AS INTIME,
			                        A5.WO_NO AS FALIAOWO,
			                        A5.MO_NO AS FALIAOMO,
			                       DD.CHUKUNUM AS CHUKUNUM,
			                       TO_CHAR(DD.OUTTIME,'YYYY-MM-DD HH24:MI:SS') AS OUTTIME,
			                      NULL AS SUPPLIER_NAME
			          FROM (SELECT A1.BARCODE,
			                       A1.MATERIA_ID,
			                       A1.MATERIA_NAME,
			                       A1.ORDER_ID,
			                       '' AS LAILIAOSUM,
			                       A4.STORE_NAME,
			                       '' AS RUKUNUM,
			                       NULL AS INTIME,
			                       A1.PACKAGE_CAPACITY AS CHUKUNUM,
			                       A1.UPDATE_DATE AS OUTTIME
			                  FROM WMS1.WMS_CHECKIN_PACKAGE A1
			                  LEFT JOIN WMS1.C_WMS_LOCATION_T B
			                    ON A1.LOCATION_ID = B.LOCATION_ID
			                  LEFT JOIN WMS1.C_WMS_SHELF_T H
			                    ON B.SHELF_ID = H.SHELF_ID
			                  LEFT JOIN WMS1.C_WMS_AREA_T I
			                    ON I.AREA_ID = H.AREA_ID
			                  LEFT JOIN WMS1.C_WMS_STORE_T A4
			                    ON I.STORE_ID = A4.STORE_ID
			                  WHERE A1.CHECKIN_STATUS = 'ENT01.06' 
			                 ) DD
			          LEFT JOIN WMS1.WMS_ORDER_DETAIL A2
			            ON DD.ORDER_ID = A2.ORDER_ID
			          LEFT JOIN IPLANT1.C_IPLANT_S3_T A3
			            ON A2.SUPPLIER_ID = A3.SUP_CD
			          LEFT JOIN WMS1.WMS_MATERIA_DETAIL A5 
			            ON DD.BARCODE=A5.BARCODE) FF
			         LEFT JOIN 
			         ( 
			           SELECT 
			             DD.WO_NO,
			             DD.MO_NO AS LINGLIAOMO,
			             DD.MAT_CD,
			             SUM(NVL(DD.PSN_QTY,0)) AS LINGLIAOSUM
			             FROM
			            (
			              SELECT
			               WO_NO, 
			               MO_NO,
			               MAT_CD,
			               PSN_QTY
			              FROM MES1.R_MES_MAT_STOCK_T         
			            )DD
			            GROUP BY DD.MO_NO,DD.MAT_CD,DD.WO_NO
			            )TT ON FF.FALIAOMO=TT.LINGLIAOMO AND FF.MATERIA_ID=TT.MAT_CD AND FF.FALIAOWO=TT.WO_NO
			      LEFT JOIN 
			         (SELECT 
			          T1.WO_NO,
			          T1.MO_NO AS MO,
			          T1.FD_CD AS FDNO,
			          T1.MAT_CD,
			          T1.STACK_CD AS ZWNO,
			          T1.TOT_QTY AS SHANGLIAOSUM,
			          T1.CRT_ID AS SHANGLIAOMEM,
			          TO_CHAR(T1.CRT_DT ,'YYYY-MM-DD HH24:MI:SS') AS SHANGLIAOTIME
			        FROM MES1.R_MES_FEED_STOCK_T T1
			        LEFT JOIN MES1.R_MES_WO_T T2 ON T1.WO_NO=T2.WO_NO AND T1.MO_NO=T2.MO_NO
			        )HH ON HH.MO=FF.FALIAOMO AND HH.MAT_CD=FF.MATERIA_ID AND HH.WO_NO=FF.FALIAOWO
			        LEFT JOIN 
			        (
			         SELECT 
			          MO_NO AS TUILIAOMO ,
			          WO_NO,
			          MAT_CD,
			          RTN_QTY AS TUILIAOSUM,
			          CRT_ID AS TUILIAOMEM,
			          TO_CHAR(CRT_DT ,'YYYY-MM-DD HH24:MI:SS') AS TUILIAOTIME
			         FROM MES1.R_MES_RTN_MAT_T
			        )EE ON EE.TUILIAOMO=FF.FALIAOMO AND EE.WO_NO=FF.FALIAOWO AND EE.MAT_CD=FF.MATERIA_ID
			     <where>
			       <if test="BARCODE !=null and BARCODE !='' ">
					    AND FF.BARCODE = '${BARCODE}'
				   </if>
			     </where>
				)CC	       				
       <include refid="oraclePagingFileBottom"></include> 	
	</select>
	
	<!-- 查询条码追溯记录分页总数 -->
	<select id="queryBARCODEZS_COUNT" parameterType="hashmap" resultType="java.util.HashMap">
		SELECT
		    COUNT(1) AS ROWS_COUNT
		 FROM 
			 (
		      SELECT 
			      FF.*,
			      TT.LINGLIAOMO,  
			      TT.LINGLIAOSUM,
			      HH.MO,
			      HH.FDNO,
			      HH.ZWNO,
			      HH.SHANGLIAOSUM,
			      HH.SHANGLIAOMEM,
			      HH.SHANGLIAOTIME,
			      EE.TUILIAOMO,
			      EE.TUILIAOSUM,
			      EE.TUILIAOMEM,
			      EE.TUILIAOTIME
			     FROM
			      (SELECT DISTINCT DD.BARCODE,
			                        DD.MATERIA_ID,
			                        DD.MATERIA_NAME,
			                        DD.LAILIAOSUM AS LAILIAOSUM,
			                        DD.STORE_NAME,
			                        null AS RUKUNUM,
			                        NULL AS INTIME,
			                        NULL AS FALIAOWO,
			                        NULL AS FALIAOMO,
			                        null AS CHUKUNUM,
			                        NULL AS OUTTIME,
			                        A3.SUP_NM AS SUPPLIER_NAME
			          FROM (SELECT A1.BARCODE,
			                       A1.MATERIA_ID,
			                       A1.MATERIA_NAME,
			                       A1.ORDER_ID,
			                       A1.PACKAGE_CAPACITY AS LAILIAOSUM,
			                       A4.STORE_NAME,
			                       '' AS RUKUNUM,
			                       '' AS INTIME,
			                       '' AS CHUKUNUM,
			                       '' AS OUTTIME
			                  FROM WMS1.WMS_CHECKIN_PACKAGE A1
			                  LEFT JOIN WMS1.C_WMS_LOCATION_T B
			                    ON A1.LOCATION_ID = B.LOCATION_ID
			                  LEFT JOIN WMS1.C_WMS_SHELF_T H
			                    ON B.SHELF_ID = H.SHELF_ID
			                  LEFT JOIN WMS1.C_WMS_AREA_T I
			                    ON I.AREA_ID = H.AREA_ID
			                  LEFT JOIN WMS1.C_WMS_STORE_T A4
			                    ON I.STORE_ID = A4.STORE_ID
			                  WHERE A1.CHECKIN_STATUS IN ('ENT01.01', 'ENT01.02','ENT01.03') 
			                 ) DD
			          LEFT JOIN WMS1.WMS_ORDER_DETAIL A2
			            ON DD.ORDER_ID = A2.ORDER_ID
			          LEFT JOIN IPLANT1.C_IPLANT_S3_T A3
			            ON A2.SUPPLIER_ID = A3.SUP_CD
			        UNION ALL
			        SELECT DISTINCT DD.BARCODE,
			                        DD.MATERIA_ID,
			                        DD.MATERIA_NAME,
			                        null AS LAILIAOSUM,
			                        DD.STORE_NAME,
			                        DD.RUKUNUM AS RUKUNUM,
			                        TO_CHAR(DD.INTIME,'YYYY-MM-DD HH24:MI:SS') AS INTIME,
			                        NULL AS FALIAOWO,
			                        NULL AS FALIAOMO,
			                        null AS CHUKUNUM,
			                        NULL AS OUTTIME,
			                        NULL AS SUPPLIER_NAME
			          FROM (SELECT A1.BARCODE,
			                       A1.MATERIA_ID,
			                       A1.MATERIA_NAME,
			                       A1.ORDER_ID,
			                       null AS LAILIAOSUM,
			                       A4.STORE_NAME,
			                       A1.PACKAGE_CAPACITY AS RUKUNUM,
			                       A1.UPDATE_DATE AS INTIME,
			                       null AS CHUKUNUM,
			                       NULL AS OUTTIME
			                  FROM WMS1.WMS_CHECKIN_PACKAGE A1
			                  LEFT JOIN WMS1.C_WMS_LOCATION_T B
			                    ON A1.LOCATION_ID = B.LOCATION_ID
			                  LEFT JOIN WMS1.C_WMS_SHELF_T H
			                    ON B.SHELF_ID = H.SHELF_ID
			                  LEFT JOIN WMS1.C_WMS_AREA_T I
			                    ON I.AREA_ID = H.AREA_ID
			                  LEFT JOIN WMS1.C_WMS_STORE_T A4
			                    ON I.STORE_ID = A4.STORE_ID
			                  WHERE A1.CHECKIN_STATUS IN  ('ENT01.04', 'ENT01.08') 
			                         ) DD
			          LEFT JOIN WMS1.WMS_ORDER_DETAIL A2
			            ON DD.ORDER_ID = A2.ORDER_ID
			          LEFT JOIN IPLANT1.C_IPLANT_S3_T A3
			            ON A2.SUPPLIER_ID = A3.SUP_CD
			        UNION ALL
			        SELECT DISTINCT DD.BARCODE,
			                        DD.MATERIA_ID,
			                        DD.MATERIA_NAME,
			                        null AS LAILIAOSUM,
			                        DD.STORE_NAME,
			                        null AS RUKUNUM,
			                        NULL AS INTIME,
			                        A5.WO_NO AS FALIAOWO,
			                        A5.MO_NO AS FALIAOMO,
			                       DD.CHUKUNUM AS CHUKUNUM,
			                       TO_CHAR(DD.OUTTIME,'YYYY-MM-DD HH24:MI:SS') AS OUTTIME,
			                      NULL AS SUPPLIER_NAME
			          FROM (SELECT A1.BARCODE,
			                       A1.MATERIA_ID,
			                       A1.MATERIA_NAME,
			                       A1.ORDER_ID,
			                       '' AS LAILIAOSUM,
			                       A4.STORE_NAME,
			                       '' AS RUKUNUM,
			                       NULL AS INTIME,
			                       A1.PACKAGE_CAPACITY AS CHUKUNUM,
			                       A1.UPDATE_DATE AS OUTTIME
			                  FROM WMS1.WMS_CHECKIN_PACKAGE A1
			                  LEFT JOIN WMS1.C_WMS_LOCATION_T B
			                    ON A1.LOCATION_ID = B.LOCATION_ID
			                  LEFT JOIN WMS1.C_WMS_SHELF_T H
			                    ON B.SHELF_ID = H.SHELF_ID
			                  LEFT JOIN WMS1.C_WMS_AREA_T I
			                    ON I.AREA_ID = H.AREA_ID
			                  LEFT JOIN WMS1.C_WMS_STORE_T A4
			                    ON I.STORE_ID = A4.STORE_ID
			                  WHERE A1.CHECKIN_STATUS = 'ENT01.06' 
			                 ) DD
			          LEFT JOIN WMS1.WMS_ORDER_DETAIL A2
			            ON DD.ORDER_ID = A2.ORDER_ID
			          LEFT JOIN IPLANT1.C_IPLANT_S3_T A3
			            ON A2.SUPPLIER_ID = A3.SUP_CD
			          LEFT JOIN WMS1.WMS_MATERIA_DETAIL A5 
			            ON DD.BARCODE=A5.BARCODE) FF
			         LEFT JOIN 
			         ( 
			           SELECT 
			             DD.WO_NO,
			             DD.MO_NO AS LINGLIAOMO,
			             DD.MAT_CD,
			             SUM(NVL(DD.PSN_QTY,0)) AS LINGLIAOSUM
			             FROM
			            (
			              SELECT
			               WO_NO, 
			               MO_NO,
			               MAT_CD,
			               PSN_QTY
			              FROM MES1.R_MES_MAT_STOCK_T         
			            )DD
			            GROUP BY DD.MO_NO,DD.MAT_CD,DD.WO_NO
			            )TT ON FF.FALIAOMO=TT.LINGLIAOMO AND FF.MATERIA_ID=TT.MAT_CD AND FF.FALIAOWO=TT.WO_NO
			      LEFT JOIN 
			         (SELECT 
			          T1.WO_NO,
			          T1.MO_NO AS MO,
			          T1.FD_CD AS FDNO,
			          T1.MAT_CD,
			          T1.STACK_CD AS ZWNO,
			          T1.TOT_QTY AS SHANGLIAOSUM,
			          T1.CRT_ID AS SHANGLIAOMEM,
			          TO_CHAR(T1.CRT_DT ,'YYYY-MM-DD HH24:MI:SS') AS SHANGLIAOTIME
			        FROM MES1.R_MES_FEED_STOCK_T T1
			        LEFT JOIN MES1.R_MES_WO_T T2 ON T1.WO_NO=T2.WO_NO AND T1.MO_NO=T2.MO_NO
			        )HH ON HH.MO=FF.FALIAOMO AND HH.MAT_CD=FF.MATERIA_ID AND HH.WO_NO=FF.FALIAOWO
			        LEFT JOIN 
			        (
			         SELECT 
			          MO_NO AS TUILIAOMO ,
			          WO_NO,
			          MAT_CD,
			          RTN_QTY AS TUILIAOSUM,
			          CRT_ID AS TUILIAOMEM,
			          TO_CHAR(CRT_DT ,'YYYY-MM-DD HH24:MI:SS') AS TUILIAOTIME
			         FROM MES1.R_MES_RTN_MAT_T
			        )EE ON EE.TUILIAOMO=FF.FALIAOMO AND EE.WO_NO=FF.FALIAOWO AND EE.MAT_CD=FF.MATERIA_ID
			     <where>
			       <if test="BARCODE !=null and BARCODE !='' ">
					    AND CC.BARCODE = '${BARCODE}'
				   </if>
			     </where>
                )CC	
	</select>
	
	<!-- 查询MES工单领料-->
	<select id="queryMESMOll" parameterType="hashmap" resultType="java.util.HashMap"> 
	    <include refid="oraclePagingFileTop"></include>  
		     TT.*
		    FROM(
		     SELECT 
				 DD.MO_NO AS LINGLIAOMO,
				 DD.MAT_CD,
				 SUM(NVL(DD.PSN_QTY,0)) AS LINGLIAOSUM
				 FROM
				(
				  SELECT  
				   MO_NO,
				   MAT_CD,
				   PSN_QTY
				  FROM MES1.R_MES_MAT_STOCK_T
				<where>
				 <if test="MO_NO !=null and MO_NO !='' ">
						AND MO_NO = '${MO_NO}'
				 </if>
				 <if test="MAT_CD !=null and MAT_CD !='' ">
						AND MAT_CD = '${MAT_CD}'
				 </if>
				</where>
				)DD
				GROUP BY DD.MO_NO,DD.MAT_CD
				)TT		       				
       <include refid="oraclePagingFileBottom"></include> 	
	</select>
	
	<!-- 查询MES工单领料分页总数 -->
	<select id="queryMESMOll_COUNT" parameterType="hashmap" resultType="java.util.HashMap">
		SELECT
		    COUNT(1) AS ROWS_COUNT
		 FROM 
			 (
		       SELECT 
				 DD.MO_NO AS LINGLIAOMO,
				 DD.MAT_CD,
				 SUM(NVL(DD.PSN_QTY,0)) AS LINGLIAOSUM
				 FROM
				(
				  SELECT  
				   MO_NO,
				   MAT_CD,
				   PSN_QTY
				  FROM MES1.R_MES_MAT_STOCK_T
				 <where>
				 <if test="MO_NO !=null and MO_NO !='' ">
						AND MO_NO = '${MO_NO}'
				 </if>
				 <if test="MAT_CD !=null and MAT_CD !='' ">
						AND MAT_CD = '${MAT_CD}'
				 </if>
				</where>
				)DD
				GROUP BY DD.MO_NO,DD.MAT_CD
                )TT	
         </select>
         
    <!-- 查询MES工单生产-->
	<select id="queryMESMOProduct" parameterType="hashmap" resultType="java.util.HashMap"> 
	    <include refid="oraclePagingFileTop"></include>  
		     TT.*
		    FROM(
		     SELECT 
				  T1.MO_NO AS MO,
				  T1.FD_CD AS FDNO,
				  T1.STACK_CD AS ZWNO,
				  T1.TOT_QTY AS SHANGLIAOSUM,
				  T1.CRT_ID AS SHANGLIAOMEM,
				  TO_CHAR(T1.CRT_DT ,'YYYY-MM-DD HH24:MI:SS') AS SHANGLIAOTIME
				FROM MES1.R_MES_FEED_STOCK_T T1
				LEFT JOIN MES1.R_MES_WO_T T2 ON T1.WO_NO=T2.WO_NO AND T1.MO_NO=T2.MO_NO
				<where>
				     T2.WO_STATE=5
				 <if test="MO_NO !=null and MO_NO !='' ">
						AND T1.MO_NO = '${MO_NO}'
				 </if>
				 <if test="MAT_CD !=null and MAT_CD !='' ">
						AND T1.MAT_CD = '${MAT_CD}'
				 </if>
				</where>				
				)TT		       				
       <include refid="oraclePagingFileBottom"></include> 	
	</select>
	
	<!-- 查询MES工单生产分页总数 -->
	<select id="queryMESMOProduct_COUNT" parameterType="hashmap" resultType="java.util.HashMap">
		SELECT
		    COUNT(1) AS ROWS_COUNT
		 FROM 
			 (
		      SELECT 
				  T1.MO_NO AS MO,
				  T1.FD_CD AS FDNO,
				  T1.STACK_CD AS ZWNO,
				  T1.TOT_QTY AS SHANGLIAOSUM,
				  T1.CRT_ID AS SHANGLIAOMEM,
				  TO_CHAR(T1.CRT_DT ,'YYYY-MM-DD HH24:MI:SS') AS SHANGLIAOTIME
				FROM MES1.R_MES_FEED_STOCK_T T1
				LEFT JOIN MES1.R_MES_WO_T T2 ON T1.WO_NO=T2.WO_NO AND T1.MO_NO=T2.MO_NO
				<where>
				     T2.WO_STATE=5
				 <if test="MO_NO !=null and MO_NO !='' ">
						AND T1.MO_NO = '${MO_NO}'
				 </if>
				 <if test="MAT_CD !=null and MAT_CD !='' ">
						AND T1.MAT_CD = '${MAT_CD}'
				 </if>
				</where>	
                )TT	
         </select>
    <!-- 查询MES工单完工-->
	<select id="queryMESMOfinish" parameterType="hashmap" resultType="java.util.HashMap"> 
	    <include refid="oraclePagingFileTop"></include>  
		     TT.*
		    FROM(
		      SELECT 
				  MO_NO AS TUILIAOMO,
				  WO_NO,
				  RTN_QTY AS TUILIAOSUM,
				  CRT_ID AS TUILIAOMEM,
				  TO_CHAR(CRT_DT ,'YYYY-MM-DD HH24:MI:SS') AS TUILIAOTIME
               FROM MES1.R_MES_RTN_MAT_T
				<where>
				 <if test="MO_NO !=null and MO_NO !='' ">
						AND MO_NO = '${MO_NO}'
				 </if>
				 <if test="MAT_CD !=null and MAT_CD !='' ">
						AND MAT_CD = '${MAT_CD}'
				 </if>
				</where>
				)TT		       				
       <include refid="oraclePagingFileBottom"></include> 	
	</select>
	
	<!-- 查询MES工单完工分页总数 -->
	<select id="queryMESMOfinish_COUNT" parameterType="hashmap" resultType="java.util.HashMap">
		SELECT
		    COUNT(1) AS ROWS_COUNT
		 FROM 
			 (
		        SELECT 
				  MO_NO AS TUILIAOMO,
				  WO_NO,
				  RTN_QTY AS TUILIAOSUM,
				  CRT_ID AS TUILIAOMEM,
				  TO_CHAR(CRT_DT ,'YYYY-MM-DD HH24:MI:SS') AS TUILIAOTIME
               FROM MES1.R_MES_RTN_MAT_T
				<where>
				 <if test="MO_NO !=null and MO_NO !='' ">
						AND MO_NO = '${MO_NO}'
				 </if>
				 <if test="MAT_CD !=null and MAT_CD !='' ">
						AND MAT_CD = '${MAT_CD}'
				 </if>
				</where>
                )TT	
   </select>
   
   <!-- 查询成品仓信息 -->
	<select id="queryProductWarehouse" parameterType="hashmap" resultType="java.util.HashMap">
		   SELECT 
            T2.STORE_ID,
            T1.SHELF_ID,
            T1.SHELF_NAME,
            T1.LAYER_NUMBER AS ROW_ID,
            T1.COL_NUMBER AS COL_ID
           FROM WMS1.C_WMS_SHELF_T T1 
           LEFT JOIN WMS1.C_WMS_AREA_T T2 ON T1.AREA_ID=T2.AREA_ID
				<where>
				  1=1
				 <if test="STORE_ID !=null and STORE_ID !='' ">
						AND STORE_ID = '${STORE_ID}'
				 </if>
				 <if test="SHELF_ID !=null and SHELF_ID !='' ">
						AND SHELF_ID = '${SHELF_ID}'
				 </if>
				</where>
   </select>
   
   <!-- 查询成品仓出入库中间表信息-->
	<select id="queryCPProduct" parameterType="hashmap" resultType="java.util.HashMap"> 	   
	   <include refid="oraclePagingFileTop"></include> 		
        DD.*
        FROM
        (SELECT
          CP_ID,
          STORE_ID,
          STORE_NAME,          
          SHELF_ID,
          SHELF_NAME,
          LOCATION_ID,
          LOCATION_NAME,
          ROW_ID,
          COLUMN_ID,
          M_BARCODE,
          DIRECT,
          OPERATE_STATUS,   
          T1.CRT_ID,
          T4.EMP_NM AS CRT_NM,
          AGV_ID,  
          TO_CHAR(CRT_TIME,'YYYY-MM-DD HH24:MI:SS') AS CRT_TIME,
          TO_CHAR(UP_TIME,'YYYY-MM-DD HH24:MI:SS') AS UP_TIME
       FROM WMS1.WMS_COM_PRODUCT T1
       LEFT JOIN (
       		SELECT
			T2.USE_CD,
			T3.EMP_NM 
			FROM iplant1.C_IPLANT_U1_T T2
			LEFT JOIN iplant1.C_IPLANT_E1_T T3 ON T2.EMP_NO = T3.EMP_CD
       	) T4 ON T1.CRT_ID=T4.USE_CD
       <where>
			1=1			
			<if test="CP_ID !=null and CP_ID !='' ">
				AND CP_ID = '${CP_ID}'
			</if>
			<if test="SHELF_NAME !=null and SHELF_NAME !='' ">
				AND SHELF_ID ='${SHELF_ID}'
			</if>
			<if test="ROW_ID !=null and ROW_ID !='' ">
				AND ROW_ID='${ROW_ID}'
			</if>
			<if test="DIRECT !=null and DIRECT !='' ">
				AND DIRECT='${DIRECT}'
			</if>
			<if test="OPERATE_STATUS !=null and OPERATE_STATUS !='' ">
				AND OPERATE_STATUS='${OPERATE_STATUS}'
			</if>
		</where>
		ORDER BY DIRECT DESC	
		)DD
       <include refid="oraclePagingFileBottom"></include> 	       					
	</select>
	<!-- 查询仓储出入库中间表信息分页总数 -->
	<select id="queryCPProduct_COUNT" parameterType="hashmap" resultType="java.util.HashMap">
		SELECT
		COUNT(1) AS ROWS_COUNT
		 FROM WMS1.WMS_COM_PRODUCT
		 <where>
			1=1			
			<if test="CP_ID !=null and CP_ID !='' ">
				AND CP_ID = '${CP_ID}'
			</if>
			<if test="SHELF_NAME !=null and SHELF_NAME !='' ">
				AND SHELF_ID ='${SHELF_ID}'
			</if>
		</where>
	</select>
	<!-- 新增仓储出入库中间表信息 -->
	<insert id="InsertCPProduct" parameterType="hashmap"> 
		INSERT INTO WMS1.WMS_COM_PRODUCT(CP_ID,STORE_ID,STORE_NAME,SHELF_ID,SHELF_NAME,LOCATION_ID,LOCATION_NAME,ROW_ID,COL_ID,M_BARCODE,AGV_ID,DIRECT,OPERATE_STATUS,CRT_ID,CRT_TIME)
		VALUES('${CP_ID}','C0002','成品仓库','${SHELF_ID}','${SHELF_NAME}','${LOCATION_ID}','${LOCATION_NAME}','${ROW_ID}','${COLUMN_ID}','N','02','${DIRECT}','${OPERATE_STATUS}','${F_USE_CD}',SYSDATE)
	</insert>
	<!-- 修改仓储出入库中间表信息息 -->
	<update id="UpdateCPProduct" parameterType="HashMap" >
			UPDATE WMS1.WMS_COM_PRODUCT
				<set>
					  <if test="SHELF_ID !=null"> 
					      SHELF_ID='${SHELF_ID}',
					  </if>
					   <if test="SHELF_NAME !=null"> 
					      SHELF_NAME='${SHELF_NAME}',
					  </if>
					  <if test="ROW_ID !=null"> 
					      ROW_ID='${ROW_ID}',
					  </if>	
					  <if test="COL_ID !=null"> 
					      COL_ID='${COL_ID}',
					  </if>
					  <if test="DIRECT !=null"> 
					      DIRECT='${DIRECT}',
					  </if>	
					  <if test="OPERATE_STATUS !=null"> 
					      OPERATE_STATUS='${OPERATE_STATUS}',
					  </if>
					  UP_TIME=SYSDATE				  
				</set>
				<where> CP_ID = '${CP_ID}'</where>
	</update>
	<!-- 删除仓储出入库中间表信息 -->
	<delete id="DeleteCPProduct" parameterType="hashmap">
	            DELETE WMS1.WMS_COM_PRODUCT
	             <where>
	             		CP_ID='${CP_ID}'
	             </where>  
	</delete>
	<!-- 更新库位信息表 -->
	<update id="UpdatePOSINFO" parameterType="HashMap" >
		UPDATE WMS1.C_WMS_LOCATION_T
		<set>
			<if test="BARCODE !=null"> BARCODE='${BARCODE}',</if>
			<if test="STATUS !=null"> STATUS='${STATUS}',</if>				  
		</set>
		<where> 
			SHELF_ID = '${SHELF_ID}' AND ROW_ID= '${ROW_ID}' AND COLUMN_ID= '${COLUMN_ID}'
		</where>
	</update>
	<!-- 库位启用停用 -->
	<update id="updateWmsPosition" parameterType="HashMap" >
		UPDATE WMS1.C_WMS_LOCATION_T
		<set>
			<if test="ENABLE !=null  and ENABLE != ''"> ENABLE='${ENABLE}',</if>	
			<!-- 添加标签设置 -->	
			<if test="BARCODE !=null  and BARCODE != ''"> BARCODE='${BARCODE}',</if>		  
		</set>
		<where> 
			LOCATION_ID = '${LOCATION_ID}'
		</where>
	</update>
	
	<!-- 查询成品仓操作信息 -->
	<select id="queryProductlinkInfo" parameterType="hashmap" resultType="java.util.HashMap">
		   SELECT 
				 AGV_ID,
				 SHELF_ID,
				 SHELF_NAME,
				 ROW_ID,
				 COLUMN_ID,
				 CASE 
				   WHEN DIRECT='IN'  THEN '上架'
				   WHEN DIRECT='OUT' THEN '下架'  
				   ELSE ''
				 END AS DIRECT,
				 CASE 
				   WHEN OPERATE_STATUS=0 THEN '待处理'
				   WHEN OPERATE_STATUS=1 THEN '已处理'
				   WHEN OPERATE_STATUS=2 THEN '进行中'
				   ELSE ''
				 END AS OPERATE_STATUS
			FROM WMS1.WMS_COM_PRODUCT
			WHERE  OPERATE_STATUS IN (0,2)
			ORDER BY OPERATE_STATUS DESC
   </select>
   <!-- 删除货位信息 -->
	<delete id="DeletePosition" parameterType="hashmap">
		DELETE WMS1.C_WMS_LOCATION_T
        <where>
			SHELF_ID='${SHELF_ID}'
        </where>  
	</delete>
	<!-- 新增仓储出库表信息 -->
	<insert id="InsertWMSOUTlink" parameterType="hashmap"> 
			   INSERT INTO 
					   WMS1.WMS_M_OUTINFO
					        (
					          M_OUT_ID,
					          MO_CD,
					          LOCATION_ID,
					          RFID,
					          BARCODE,
					          MATERIA_ID,
					          MATERIA_NAME,
					          M_TYPE,
					          M_NUM,  
					          M_UNIT,
					          STATUS,
                              OUT_TIME,
                              CREATER_ID,
                              CREATE_DATE
					         )
					         VALUES
					         (
		                      	'${M_OUT_ID}',
			                    '${MO_CD}',
			                    '${LOCATION_ID}',			                    
			                    '${RFID}',
			                    '${BARCODE}',
			                    '${MATERIA_ID}',
			                    '${MATERIA_NAME}',
			                    '${M_TYPE}',
			                    '${M_NUM}',
			                    '${M_UNIT}',
			                    '${STATUS}',
			                    SYSDATE,	
			                    '${F_USE_CD}',	
			                    SYSDATE	         			       
		                      )
	</insert>
	
	<!-- 查询仓库编码 -->
	    <select id="queryWAREHOUSE_ID" parameterType="hashmap" resultType="java.util.HashMap">   		
	    		SELECT COUNT(*) AS STATUS FROM 
				(
				 SELECT STORE_ID  FROM WMS1.C_WMS_AREA_T   WHERE STORE_ID='${STORE_ID}' 
 				)
 	    </select>
 	 <!-- 查询储区编码 -->
	    <select id="querySTORE_ID" parameterType="hashmap" resultType="java.util.HashMap">   		
	    		SELECT COUNT(*) AS STATUS FROM 
				(
				 SELECT AREA_ID  FROM WMS1.C_WMS_SHELF_T   WHERE AREA_ID='${AREA_ID}' 
 				)
 		</select>
	<!-- 查询毛坯物料类型信息 -->
	<select id="MateriaTypeQuery" parameterType="hashmap" resultType="java.util.HashMap">
		<include refid="oraclePagingFileTop"></include>
		CC.*
		FROM
		(
		SELECT 
			T1.M_TYPE_CD,
	        T1.M_TYPE_NM,
	        T1.TYPE_VALUE,
	        T1.TYPE_DIFF,
	        T1.USE_TYPE,
	        T5.DICT_IT_NM AS USE_TYPE_NM,
	        T1.CREATER_ID,
	        T1.MEMO,
			T4.EMP_NM AS CREATER_NAME,
			TO_CHAR(T1.CREATE_DATE,'YYYY-MM-DD HH24:MI:SS') AS CREATE_DATE
		FROM WMS1.WMS_M_TYPE T1
		LEFT JOIN WMS1.C_MASA_DD_T T5 ON T1.USE_TYPE=T5.DICT_IT
		LEFT JOIN (
       		SELECT
			T2.USE_CD,
			T3.EMP_NM 
			FROM IPLANT1.C_IPLANT_U1_T T2
			LEFT JOIN IPLANT1.C_IPLANT_E1_T T3 ON T2.EMP_NO = T3.EMP_CD
       	) T4 ON T1.CREATER_ID=T4.USE_CD
		<where>
			1=1
			<if test="M_TYPE_CD !=null and M_TYPE_CD !='' ">
				AND T1.M_TYPE_CD='${M_TYPE_CD}'
			</if>
			<if test="M_TYPE_NM !=null and M_TYPE_NM !='' ">
				AND T1.M_TYPE_NM LIKE '%${M_TYPE_NM}%'
			</if>
		</where>
		ORDER BY T1.CREATE_DATE DESC
		)
		CC
		<include refid="oraclePagingFileBottom"></include>
	</select>

	<!-- 查询托盘信息分页总数 -->
	<select id="MateriaTypeQuery_COUNT" parameterType="hashmap"
		resultType="java.util.HashMap">
		SELECT
		COUNT(1) AS ROWS_COUNT
		FROM WMS1.WMS_M_TYPE T1
		LEFT JOIN WMS1.C_MASA_DD_T T5 ON T1.USE_TYPE=T5.DICT_IT
		LEFT JOIN (
       		SELECT
			T2.USE_CD,
			T3.EMP_NM 
			FROM IPLANT1.C_IPLANT_U1_T T2
			LEFT JOIN IPLANT1.C_IPLANT_E1_T T3 ON T2.EMP_NO = T3.EMP_CD
       	) T4 ON T1.CREATER_ID=T4.USE_CD
		<where>
			1=1
			<if test="M_TYPE_CD !=null and M_TYPE_CD !='' ">
				AND T1.M_TYPE_CD='${M_TYPE_CD}'
			</if>
			<if test="M_TYPE_NM !=null and M_TYPE_NM !='' ">
				AND T1.M_TYPE_NM LIKE '%${M_TYPE_NM}%'
			</if>
		</where>
	</select>

	<!-- 新增毛坯物料分类信息 -->
	<insert id="MateriaTypeInsert" parameterType="java.util.List">
		INSERT INTO WMS_M_TYPE
       (
		   M_TYPE_CD,
		   M_TYPE_NM,
		   TYPE_VALUE,
		   TYPE_DIFF,
		   USE_TYPE,
		   MEMO,
		   CREATER_ID,
		   CREATE_DATE
        )
		VALUES
		(		
			'${M_TYPE_CD}',
			'${M_TYPE_NM}',
			'${TYPE_VALUE}',
			'${TYPE_DIFF}',
			'${USE_TYPE}',
			'${MEMO}',
			'${F_USE_CD}',
			SYSDATE
		)
	</insert>

	<!-- 修改毛坯物料分类信息 -->
	<update id="MateriaTypeUpdate" parameterType="java.util.HashMap">		
			UPDATE WMS1.WMS_M_TYPE
			<set>
				<if test="M_TYPE_NM !=null ">
					M_TYPE_NM='${M_TYPE_NM}',
				</if>
				<if test="TYPE_VALUE !=null ">
					TYPE_VALUE='${TYPE_VALUE}',
				</if>
				<if test="TYPE_DIFF !=null ">
					TYPE_DIFF='${TYPE_DIFF}',
				</if>
				<if test="USE_TYPE !=null ">
					USE_TYPE='${USE_TYPE}',
				</if>
				<if test="MEMO !=null  ">
					MEMO='${MEMO}',
				</if>
				CREATER_ID='${F_USE_CD}',
				CREATE_DATE=SYSDATE
			</set>
			<where>
				M_TYPE_CD='${M_TYPE_CD}'
			</where>		
	</update>

	<!-- 删除毛坯物料分类信息 -->
	<delete id="MateriaTypeDelete" parameterType="hashmap">
		DELETE WMS1.WMS_M_TYPE
		<where>
			M_TYPE_CD='${M_TYPE_CD}'
		</where>
	</delete>
		
	
	<!-- 查询供应商信息 -->
	<select id="SupplierQuery" parameterType="hashmap" resultType="java.util.HashMap">
		<include refid="oraclePagingFileTop"></include>
		T1.SUP_ID,T1.SUP_NAME,T1.ENABLE,T1.MEMO,T4.EMP_NM AS CRT_NM,TO_CHAR(T1.CRT_DT,'YYYY-MM-DD HH24:MI:SS') AS CRT_DT,T1.SUP_TYPE,T6.DICT_IT_NM AS SUP_TYPE_NM,T1.SUP_CONTACT,
		T1.SUP_MOBILE,T1.SUP_PHONE,T1.EMAIL,T1.SUP_ADRESS,T1.SUP_POST,T1.BARCODE, 
		(select count(0) from WMS1.C_WMS_MATERIAL_FEATURE_T tt where tt.supplier_id=t1.SUP_ID) as num
		FROM WMS1.C_WMS_SUPPLIER_T T1 LEFT JOIN IPLANT1.C_IPLANT_DD_T T6 ON T1.SUP_TYPE=T6.DICT_IT
		LEFT JOIN (SELECT T2.USE_CD, T3.EMP_NM FROM IPLANT1.C_IPLANT_U1_T T2 LEFT JOIN IPLANT1.C_IPLANT_E1_T T3 ON T2.EMP_NO = T3.EMP_CD) T4 ON T1.CRT_ID = T4.USE_CD
		<where> 1=1
			<if test="SUP_ID !=null and SUP_ID !='' "> AND T1.SUP_ID LIKE '${SUP_ID}%'</if>
			<if test="SUP_P_ID !=null and SUP_P_ID !='' "> AND T1.SUP_ID='${SUP_P_ID}'</if>
			<if test="SUP_NAME !=null and SUP_NAME !='' "> AND T1.SUP_NAME LIKE '%${SUP_NAME}%'</if>
			<if test="SUP_TYPE !=null and SUP_TYPE !='' "> AND T1.SUP_TYPE='${SUP_TYPE}'</if>
		</where>
		ORDER BY T1.CRT_DT DESC
		<include refid="oraclePagingFileBottom"></include>
	</select>
	
	<!-- 查询供应商信息分页总数 -->
	<select id="SupplierQuery_COUNT" parameterType="hashmap" resultType="java.util.HashMap">
		SELECT COUNT(1) AS ROWS_COUNT 
		FROM WMS1.C_WMS_SUPPLIER_T T1 LEFT JOIN IPLANT1.C_IPLANT_DD_T T6 ON T1.SUP_TYPE=T6.DICT_IT
		LEFT JOIN (SELECT T2.USE_CD, T3.EMP_NM FROM IPLANT1.C_IPLANT_U1_T T2 LEFT JOIN IPLANT1.C_IPLANT_E1_T T3 ON T2.EMP_NO = T3.EMP_CD) T4 ON T1.CRT_ID = T4.USE_CD
		<where> 1=1
			<if test="SUP_ID !=null and SUP_ID !='' "> AND T1.SUP_ID LIKE '${SUP_ID}%'</if>
			<if test="SUP_P_ID !=null and SUP_P_ID !='' "> AND T1.SUP_ID='${SUP_P_ID}'</if>
			<if test="SUP_NAME !=null and SUP_NAME !='' "> AND T1.SUP_NAME LIKE '%${SUP_NAME}%'</if>
			<if test="SUP_TYPE !=null and SUP_TYPE !='' "> AND T1.SUP_TYPE='${SUP_TYPE}'</if>
		</where>
	</select>
	
	<!-- 新增供应商信息 -->
	<insert id="SupplierInsert" parameterType="java.util.List">
		INSERT INTO WMS1.C_WMS_SUPPLIER_T
       (
		   SUP_ID,
		   SUP_NAME,
		   ENABLE,
		   MEMO,
		   CRT_ID,
		   CRT_DT,
		   SUP_TYPE,
		   SUP_CONTACT,
		   SUP_MOBILE,
		   SUP_PHONE,
		   EMAIL,
		   SUP_ADRESS,
		   SUP_POST,
		   BARCODE
        )
		VALUES
		(		
			'${SUP_ID}',
			'${SUP_NAME}',
			'${ENABLE}',
			'${MEMO}',
			'${F_USE_CD}',
			 SYSDATE,
			'${SUP_TYPE}',
			'${SUP_CONTACT}',
			'${SUP_MOBILE}',
			'${SUP_PHONE}',
			'${EMAIL}',
			'${SUP_ADRESS}',
			'${SUP_POST}',
			'${BARCODE}'
		)
	</insert>
	
	<!-- 修改供应商信息 -->
	<update id="SupplierUpdate" parameterType="java.util.HashMap">		
			UPDATE WMS1.C_WMS_SUPPLIER_T
			<set>
				<if test="SUP_NAME !=null "> SUP_NAME='${SUP_NAME}',</if>
				<if test="ENABLE !=null "> ENABLE='${ENABLE}',</if>
				<if test="MEMO !=null "> MEMO='${MEMO}',</if>
				<if test="SUP_TYPE !=null "> SUP_TYPE='${SUP_TYPE}',</if>
				<if test="SUP_CONTACT !=null  "> SUP_CONTACT='${SUP_CONTACT}',</if>
				<if test="SUP_MOBILE !=null  "> SUP_MOBILE='${SUP_MOBILE}',</if>
				<if test="SUP_PHONE !=null  "> SUP_PHONE='${SUP_PHONE}',</if>
				<if test="EMAIL !=null  "> EMAIL='${EMAIL}',</if>
				<if test="SUP_ADRESS !=null  "> SUP_ADRESS='${SUP_ADRESS}',</if>
				<if test="SUP_POST !=null  "> SUP_POST='${SUP_POST}',</if>
				<if test="BARCODE !=null  "> BARCODE='${BARCODE}',</if>
				CRT_ID='${F_USE_CD}',CRT_DT=SYSDATE
			</set>
			<where> SUP_ID='${SUP_ID}' </where>		
	</update>
	
		<!-- 删除供应商信息 -->
	<delete id="SupplierDelete" parameterType="hashmap">
		DELETE WMS1.C_WMS_SUPPLIER_T <where> SUP_ID='${SUP_ID}' </where>
	</delete>
	
	<!-- 生成供应商编码 -->	
	<select id="CreatSUP_ID" parameterType="hashmap" resultType="java.util.HashMap"> 
	   SELECT IPLANT1.CREATE_TYPE_SN_P.GET_SN_P('C','GYS')  AS SUP_ID FROM DUAL
	</select> 
	
	<!-- 查询仓库基础资料信息明细 -->
	 <select id="queryWarehouseBasicInfoDetail" parameterType="hashmap" resultType="java.util.HashMap">
		<include refid="oraclePagingFileTop"></include>	
		T1.IT_ID,T1.DICT_CD,T2.DICT_NM,T1.DICT_IT,T1.DICT_IT_NM,T1.DICT_ORD,T1.USE_YN,T1.DICT_RM,T1.CRT_ID,iplant1.F_GET_USER_NAME(T1.CRT_ID) AS CRT_ID_NM,TO_CHAR(T1.CRT_DT,'YYYY-MM-DD HH24:Mi:SS') AS CRT_DT 
		FROM  WMS1.C_WMS_BASIC_DD_T T1 LEFT JOIN WMS1.C_WMS_BASIC_DM_T T2 ON T1.DICT_CD=T2.DICT_CD
		<where> 1=1
			<if test="USE_YN!=null and USE_YN!='' "> AND T1.USE_YN='${USE_YN}'</if>
       	 	<if test="DICT_CD!=null and DICT_CD!='' "> AND	T1.DICT_CD='${DICT_CD}'</if>
          	<if test="SYS_BEL!=null and SYS_BEL!='' "> AND	T1.SYS_BEL='${SYS_BEL}'</if>
          	<if test="DICT_IT!=null and DICT_IT!='' "> AND T1.DICT_IT='${DICT_IT}'</if> 
          	<if test="DICT_IT_NM!=null and DICT_IT_NM!='' "> AND T1.DICT_IT_NM='${DICT_IT_NM}'</if>
         </where> ORDER BY T1.DICT_IT ASC,T1.CRT_DT DESC
         <include refid="oraclePagingFileBottom"></include>
	</select> 
	
	<!-- 查询仓库基础资料信息明细分页总数 -->
	<select id="queryWarehouseBasicInfoDetail_COUNT" parameterType="hashmap" resultType="java.util.HashMap">
		SELECT COUNT(1) ROWS_COUNT FROM  WMS1.C_WMS_BASIC_DD_T T1 
		<where> 1=1
			<if test="USE_YN!=null and USE_YN!='' "> AND T1.USE_YN='${USE_YN}'</if>
       	 	<if test="DICT_CD!=null and DICT_CD!='' "> AND	T1.DICT_CD='${DICT_CD}'</if>
          	<if test="SYS_BEL!=null and SYS_BEL!='' "> AND	T1.SYS_BEL='${SYS_BEL}'</if>
          	<if test="DICT_IT!=null and DICT_IT!='' "> AND T1.DICT_IT='${DICT_IT}'</if> 
          	<if test="DICT_IT_NM!=null and DICT_IT_NM!='' "> AND T1.DICT_IT_NM='${DICT_IT_NM}'</if>
         </where> 
	</select>
	
	<!--查询仓库基础资料信息 -->
	<select id="queryWarehouseBasicInfo" parameterType="hashmap" resultType="java.util.HashMap">
		<include refid="oraclePagingFileTop"></include>	
		DICT_CD,DICT_NM,MT_FLAG,DICT_TP,USE_YN,CRT_ID,F_GET_USER_NAME(CRT_ID) AS CRT_ID_NM,TO_CHAR(CRT_DT,'YYYY-MM-DD HH24:Mi:SS') AS CRT_DT,
			CASE 
			  	WHEN MT_FLAG='0' THEN '是'
			  	WHEN MT_FLAG='1' THEN '否'
			END AS MT_FLAG_NM,
			CASE 
				WHEN DICT_TP='s1' THEN '系统'
				WHEN DICT_TP='s2' THEN 'MES'
				WHEN DICT_TP='s3' THEN 'TPM'
				WHEN DICT_TP='s4' THEN 'WMS'
				WHEN DICT_TP='s9' THEN 'APP'
			END AS DICT_TP_NM FROM WMS1.C_WMS_BASIC_DM_T
		<where> 1=1
		 	<if test="USE_YN!=null and USE_YN!='' "> AND USE_YN='${USE_YN}'</if>  
	      	<if test="DICT_CD!=null and DICT_CD!='' "> AND DICT_CD LIKE '${DICT_CD}%'</if>
	      	<if test="DICT_P_CD !=null and DICT_P_CD !='' "> AND DICT_CD='${DICT_P_CD}'</if>
	      	<if test="DICT_TP!=null and DICT_TP!='' "> AND DICT_TP='${DICT_TP}'</if>
	      	<if test="DICT_NM!=null and DICT_NM!='' "> AND DICT_NM LIKE '%${DICT_NM}%'</if>
	      	<if test="MT_FLAG!=null and MT_FLAG!='' "> AND MT_FLAG='${MT_FLAG}'</if>
		</where> ORDER BY CRT_DT DESC
		<include refid="oraclePagingFileBottom"></include>	
	</select>	
	<!-- 查询仓库基础资料信息分页总数 -->
	<select id="queryWarehouseBasicInfo_COUNT" parameterType="hashmap" resultType="java.util.HashMap">
		SELECT COUNT(1) ROWS_COUNT FROM WMS1.C_WMS_BASIC_DM_T 	
		 <where> 1=1
		 	<if test="USE_YN!=null and USE_YN!='' "> AND USE_YN='${USE_YN}'</if>  
	      	<if test="DICT_CD!=null and DICT_CD!='' "> AND DICT_CD LIKE '${DICT_CD}%'</if>
	      	<if test="DICT_P_CD !=null and DICT_P_CD !='' "> AND DICT_CD='${DICT_P_CD}'</if>
	      	<if test="DICT_TP!=null and DICT_TP!='' "> AND DICT_TP='${DICT_TP}'</if>
	      	<if test="DICT_NM!=null and DICT_NM!='' "> AND DICT_NM LIKE '%${DICT_NM}%'</if>
	      	<if test="MT_FLAG!=null and MT_FLAG!='' "> AND MT_FLAG='${MT_FLAG}'</if>
		</where>
	</select>
	<!-- 查询仓库基础资料信息代码 -->
	<select id="queryWarehouseBasicInfoCode" parameterType="hashmap" resultType="java.util.HashMap">   		
		SELECT COUNT(*) AS STATUS FROM (SELECT DICT_CD  FROM WMS1.C_WMS_BASIC_DD_T   WHERE DICT_CD='${DICT_CD}' )
    </select>
    <!-- 修改仓库基础资料信息 -->		
	<update id="updateWarehouseBasicInfo" parameterType="hashmap">
		UPDATE WMS1.C_WMS_BASIC_DM_T
		<set> 
			<if test="DICT_NM!=null and DICT_NM!='' "> DICT_NM='${DICT_NM}',</if>			        
			<if test="MT_FLAG!=null and MT_FLAG!='' "> MT_FLAG='${MT_FLAG}',</if>			        
			<if test="DICT_TP!=null and DICT_TP!='' "> DICT_TP='${DICT_TP}',</if>			        
			<if test="USE_YN!=null and USE_YN!='' "> USE_YN='${USE_YN}',</if>			        	        
			CRT_ID='${F_USE_CD}',CRT_DT=SYSDATE        
		</set>
	    <where> DICT_CD='${DICT_CD}'</where>       
	</update>
	<!-- 新增仓库基础资料信息 -->
	<insert id="insertWarehouseBasicInfo" parameterType="hashmap">
		INSERT INTO WMS1.C_WMS_BASIC_DM_T (DICT_CD,DICT_NM,MT_FLAG,DICT_TP,USE_YN,CRT_ID,CRT_DT) VALUES('${DICT_CD}','${DICT_NM}','${MT_FLAG}','${DICT_TP}','${USE_YN}','${F_USE_CD}',SYSDATE)
    </insert>
    <!-- 删除仓库基础资料信息 -->			        
	<delete id="deleteWarehouseBasicInfo" parameterType="hashmap">
		DELETE WMS1.C_WMS_BASIC_DM_T <where> DICT_CD='${DICT_CD}'</where>  
	</delete>
	<!-- 新增仓库基础资料信息明细 -->
	<insert id="insertWarehouseBasicInfoDetail" parameterType="java.util.List" >
		INSERT INTO WMS1.C_WMS_BASIC_DD_T(DICT_CD,DICT_IT,DICT_IT_NM,DICT_ORD,USE_YN,DICT_RM,CRT_ID,CRT_DT)
		(<foreach collection="list" item="item" index="index" separator="union all">
		    SELECT '${item.DICT_CD}','${item.DICT_IT}','${item.DICT_IT_NM}','${item.DICT_ORD}','${item.USE_YN}','${item.DICT_RM}','${F_USE_CD}',SYSDATE FROM DUAL 
		</foreach>)
	</insert>
	<!-- 删除仓库基础资料信息明细 -->		
	<delete id="deleteWarehouseBasicInfoDetail"  parameterType="hashmap">
		DELETE WMS1.C_WMS_BASIC_DD_T <where> DICT_IT='${DICT_IT}'</where>
	</delete>	
	<!-- 修改仓库基础资料信息明细-->		
	<update id="updateWarehouseBasicInfoDetail" parameterType="java.util.List">
	<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
	   UPDATE WMS1.C_WMS_BASIC_DD_T
          <set>
             <if test="item.DICT_CD!=null and item.DICT_CD!=''"> DICT_CD = '${item.DICT_CD}', </if>
             <if test="item.DICT_IT_NM!=null and item.DICT_IT_NM!=''"> DICT_IT_NM = '${item.DICT_IT_NM}',</if>
             <if test="item.DICT_ORD!=null and item.DICT_ORD!=''"> DICT_ORD = '${item.DICT_ORD}',</if>
             <if test="item.USE_YN!=null and item.USE_YN!=''"> USE_YN = '${item.USE_YN}',</if>
             <if test="item.DICT_RM!=null and item.DICT_RM!=''"> DICT_RM = '${item.DICT_RM}',</if>
            CRT_ID = '${F_USE_CD}',CRT_DT = SYSDATE
          </set>
         <where>
			DICT_IT = '${item.DICT_IT}'
        </where>
	</foreach>
	</update>	
	
	<!-- 1  物料分组维护  -->
	<!-- 查询物料分组的树形结构 -->
	<select id="queryMaterialGroupInfo" parameterType="hashmap" resultType="java.util.HashMap">
		select GRP_ID as ST_C_CD,GRP_NAME as ST_C_NM ,PARENT_GRP as ST_P_CD from iplant1.C_IPLANT_MG_T
		<where> 1=1
		     <if test="GROUP_CODE !=null and GROUP_CODE !='' "> AND GRP_ID='${GROUP_CODE}'</if>
		     <if test="GROUP_NAME !=null and GROUP_NAME !='' "> AND GRP_NAME='${GROUP_NAME}'</if>
		     <if test="PARENT_CODE !=null and PARENT_CODE !='' "> AND PARENT_GRP='${PARENT_CODE}'</if>
	     </where>
	     <!-- order by PARENT_GRP ASC -->
	</select>
	<!-- 查询存在物料分组的树形结构 -->
	<select id="queryExistMaterialGroupInfo" parameterType="hashmap" resultType="java.util.HashMap">
		select GRP_ID as ST_C_CD,GRP_NAME as ST_C_NM,PARENT_GRP as ST_P_CD from iplant1.C_IPLANT_MG_T
		<where> 1=1
		     <if test="GROUP_CODE !=null and GROUP_CODE !='' "> AND GRP_ID='${GROUP_CODE}'</if>
		     <if test="GROUP_NAME !=null and GROUP_NAME !='' "> AND GRP_NAME='${GROUP_NAME}'</if>
		     <if test="PARENT_CODE !=null and PARENT_CODE !='' "> AND PARENT_GRP='${PARENT_CODE}'</if>
	     </where> 
	</select>
	<!-- 查询存在物料分组的树形结构 -->
	<select id="queryMaterialGroupComb" parameterType="hashmap" resultType="java.util.HashMap">
		select distinct PARENT_GRP as ST_P_CD from iplant1.C_IPLANT_MG_T
		<where> 1=1
		     <if test="GROUP_NAME !=null and GROUP_NAME !='' "> AND GRP_NAME='${GROUP_NAME}'</if>
		     <if test="PARENT_CODE !=null and PARENT_CODE !='' "> AND PARENT_GRP='${PARENT_CODE}'</if>
		     AND PARENT_GRP &lt;> 'N/A'
	     </where> 
	</select>
	<!-- 物料表中存在的物料分组编码 -->
	<select id="queryExistMaterialGroup" parameterType="hashmap" resultType="java.util.HashMap">
		select distinct GRP_ID as ST_P_CD from iplant1.C_IPLANT_M3_T
	</select>
	<!-- 查询存在物料分组的树形结构 -->
	<select id="queryMaterialGroupComTotal" parameterType="hashmap" resultType="java.util.HashMap">
		select GRP_ID as ST_C_CD,GRP_NAME as ST_C_NM,PARENT_GRP as ST_P_CD from iplant1.C_IPLANT_MG_T
		<where> 1=1
		     <if test="GROUP_CODR !=null and GROUP_CODR !='' "> AND GRP_ID='${GROUP_CODR}'</if>
		     <if test="PARENT_CODE !=null and PARENT_CODE !='' "> AND PARENT_GRP='${PARENT_CODE}'</if>
	     </where> 
	</select>
	<!-- 物料分组信息新增 -->
 	<insert id="insertMaterialGroup" parameterType="hashmap">
		INSERT INTO iplant1.C_IPLANT_MG_T (GRP_ID,GRP_NAME,PARENT_GRP) VALUES('${GROUP_CODE}','${GROUP_NAME}','${PARENT_CODE}')
	</insert>  
	<!-- 删除物料分组信息 -->	
	  <delete id="deleteMaterialGroup" parameterType="hashmap">
		  DELETE iplant1.C_IPLANT_MG_T WHERE GRP_ID = '${GROUP_CODE}'
	  </delete>
	
	<!-- 2  物料信息维护  -->
	<!-- 查询物料信息 -->
	<select id="queryRMesMaterial" parameterType="hashmap" resultType="java.util.HashMap">
		<include refid="oraclePagingFileTop"></include>
		T1.MATERIAL_ID,T1.MATERIAL_NAME,T1.DEFAULT_PACKAGE,T1.HALOGEN,T1.CHANGE_ID,T1.CHANGE_NAME,T1.GRP_ID,t2.GRP_NAME,T1.UNIT_ID,t4.UNIT_NAME,T1.LABEL_TYPE,t3.DICT_IT_NM,T1.MAX_STOCK,T1.MIN_STOCK,T1.SAFTY_STOCK,T1.STORE_ID,T1.EXPIRATION_DT,T1.SPEC_MODEL,T1.COLOR,T1.MEMO,T1.CRT_ID,T1.UPT_ID, 
		TO_CHAR(T1.CRT_DT,'YYYY-MM-DD HH24:Mi:SS') AS CRT_DT,TO_CHAR(T1.UPT_DT,'YYYY-MM-DD HH24:Mi:SS') AS UPT_DT FROM IPLANT1.C_IPLANT_M3_T T1
		JOIN (SELECT * FROM IPLANT1.C_IPLANT_MG_T START WITH GRP_ID='${GRP_ID}' CONNECT BY PRIOR GRP_ID=PARENT_GRP) t2 on T1.GRP_ID=t2.GRP_ID left join wms1.C_WMS_BASIC_DD_T t3 on t3.DICT_IT=T1.LABEL_TYPE left join wms1.C_WMS_UNIT_T t4 on t4.UNIT_ID=T1.UNIT_ID
		<where> 1=1
		     <if test="MATERIAL_ID !=null and MATERIAL_ID !='' "> AND T1.MATERIAL_ID LIKE '%${MATERIAL_ID}%'</if>
		     <if test="MATERIAL_P_ID !=null and MATERIAL_P_ID !='' "> AND T1.MATERIAL_ID='${MATERIAL_P_ID}'</if>
		     <if test="MATERIAL_NAME !=null and MATERIAL_NAME !='' "> AND T1.MATERIAL_NAME like '%${MATERIAL_NAME}%'</if>
		     <if test="PARENT_GRP !=null and PARENT_GRP !='' "> AND t2.PARENT_GRP='${PARENT_GRP}'</if>
		     <if test="LABEL_TYPE !=null and LABEL_TYPE !='' "> AND T1.LABEL_TYPE='${LABEL_TYPE}'</if>
	     </where>
	     <include refid="oraclePagingFileBottom"></include> 
	</select>
	<!-- 查询物料信息分页总数 -->
	<select id="queryRMesMaterial_COUNT" parameterType="hashmap" resultType="java.util.HashMap">
		SELECT COUNT(1) AS ROWS_COUNT from iplant1.C_IPLANT_M3_T T1 join (select * from iplant1.C_IPLANT_MG_T start with GRP_ID='${GRP_ID}' connect by prior GRP_ID=PARENT_GRP) t2 on T1.GRP_ID=t2.GRP_ID
		<where> 1=1
		     <if test="MATERIAL_ID !=null and MATERIAL_ID !='' "> AND T1.MATERIAL_ID LIKE '%${MATERIAL_ID}%'</if>
		     <if test="MATERIAL_P_ID !=null and MATERIAL_P_ID !='' "> AND T1.MATERIAL_ID='${MATERIAL_P_ID}'</if>
		     <if test="MATERIAL_NAME !=null and MATERIAL_NAME !='' "> AND T1.MATERIAL_NAME like '%${MATERIAL_NAME}%'</if>
		     <if test="PARENT_GRP !=null and PARENT_GRP !='' "> AND t2.PARENT_GRP='${PARENT_GRP}'</if>
		     <if test="LABEL_TYPE !=null and LABEL_TYPE !='' "> AND T1.LABEL_TYPE='${LABEL_TYPE}'</if>
	     </where>
	</select>
	
	<!-- 查询物料信息 -->
	<select id="queryLikeRMesMaterial" parameterType="hashmap" resultType="java.util.HashMap">
		<include refid="oraclePagingFileTop"></include>
		t1.MATERIAL_ID,t1.MATERIAL_NAME,t1.GRP_ID,t2.GRP_NAME,t1.UNIT_ID,t4.UNIT_NAME,t1.LABEL_TYPE,t3.DICT_IT_NM,t1.MAX_STOCK,t1.MIN_STOCK,t1.SAFTY_STOCK,t1.STORE_ID,t5.store_name,t1.EXPIRATION_DT,t1.SPEC_MODEL,t1.COLOR,t1.MEMO,t1.CRT_ID,t1.UPT_ID, 
		TO_CHAR(T1.CRT_DT,'YYYY-MM-DD HH24:Mi:SS') AS CRT_DT,TO_CHAR(T1.UPT_DT,'YYYY-MM-DD HH24:Mi:SS') AS UPT_DT from WMS1.C_IPLANT_M3_T t1
		left join WMS1.C_IPLANT_MG_T t2 on t1.GRP_ID=t2.GRP_ID left join wms1.C_WMS_BASIC_DD_T t3 on t3.DICT_IT=t1.LABEL_TYPE left join wms1.C_WMS_UNIT_T t4 on t4.UNIT_ID=t1.UNIT_ID
		left join wms1.C_WMS_STORE_T t5 on t5.store_id=t1.store_id
		<where> 1=1
		     <if test="STORE_ID !=null and STORE_ID !='' "> AND t1.STORE_ID = '${STORE_ID}'</if>
		     <if test="MATERIAL_ID !=null and MATERIAL_ID !='' "> AND t1.MATERIAL_ID LIKE '${MATERIAL_ID}%'</if>
		     <if test="MATERIAL_NAME !=null and MATERIAL_NAME !='' "> AND t1.MATERIAL_NAME like '%${MATERIAL_NAME}%'</if>
		     <if test="SUPPLIER_ID !=null and SUPPLIER_ID !='' "> and not exists(select * FROM WMS1.C_WMS_MATERIAL_FEATURE_T t5 where t5.MATERIAL_ID=t1.MATERIAL_ID and SUPPLIER_ID='${SUPPLIER_ID}')</if>
	     </where>
	     <include refid="oraclePagingFileBottom"></include> 
	</select>
	<!-- 查询物料信息分页总数 -->
	<select id="queryLikeRMesMaterial_COUNT" parameterType="hashmap" resultType="java.util.HashMap">
		SELECT COUNT(1) AS ROWS_COUNT from iplant1.C_IPLANT_M3_T t1
		<where> 1=1
		     <if test="MATERIAL_ID !=null and MATERIAL_ID !='' "> AND t1.MATERIAL_ID='${MATERIAL_ID}%'</if>
		     <if test="MATERIAL_NAME !=null and MATERIAL_NAME !='' "> AND t1.MATERIAL_NAME like '%${MATERIAL_NAME}%'</if>
		     <if test="SUPPLIER_ID !=null and SUPPLIER_ID !='' "> and not exists(select * FROM WMS1.C_WMS_MATERIAL_FEATURE_T t5 where t5.MATERIAL_ID=t1.MATERIAL_ID and SUPPLIER_ID='${SUPPLIER_ID}')</if>
	     </where>
	</select>
	
	<!-- 物料信息新增 -->
 	<insert id="insertMaterialInfo" parameterType="hashmap">
		INSERT INTO iplant1.C_IPLANT_M3_T (MATERIAL_ID,MATERIAL_NAME,DEFAULT_PACKAGE,HALOGEN,GRP_ID,UNIT_ID,LABEL_TYPE,MAX_STOCK,MIN_STOCK,SAFTY_STOCK,STORE_ID,EXPIRATION_DT,SPEC_MODEL,COLOR,MEMO,CRT_ID,CRT_DT) 
       	VALUES('${MATERIAL_ID}','${MATERIAL_NAME}','${DEFAULT_PACKAGE}','${HALOGEN}','${GRP_ID}','${UNIT_ID}','${LABEL_TYPE}','${MAX_STOCK}','${MIN_STOCK}','${SAFTY_STOCK}','${STORE_ID}','${EXPIRATION_DT}','${SPEC_MODEL}','${COLOR}','${MEMO}','${F_USE_CD}',SYSDATE)
	</insert>  
	<!-- 物料信息批量新增 -->
 	<insert id="insertMaterialBatch" parameterType="java.util.List">
		INSERT INTO R_MES_MATERIAL (MATERIAL_CODE,FACTORY_CODE,MATERIAL_NAME,MATERIAL_TYPE,MATERIAL_KIND,MATERIAL_SIZE,MATERIAL_UNIT,GROUP_CODE,SPECIAL_IC,RECOMMEND_WAREHOUSE,RECOMMEND_AREA,ENABLE,REMARK,CREATE_USER,CREATE_DATE) 
		(<foreach collection="list" item="item" index="index" separator="union all">
		SELECT '${item.MATERIAL_CODE}','${item.FACTORY_CODE}','${item.MATERIAL_NAME}','${item.MATERIAL_TYPE}','${item.MATERIAL_KIND}','${item.MATERIAL_SIZE}','${item.MATERIAL_UNIT}','${item.GROUP_CODE}','${item.SPECIAL_IC}','${item.RECOMMEND_WAREHOUSE}','${item.RECOMMEND_AREA}','${item.ENABLE}','${item.REMARK}','${CREATE_USER}',SYSDATE FROM DUAL
		</foreach>)
	</insert>  
	<!-- 物料信息修改 -->
	<update id="updateMaterialInfo" parameterType="java.util.HashMap" >
		UPDATE  iplant1.C_IPLANT_M3_T 
		<set>
			<if test="MATERIAL_NAME !=null and MATERIAL_NAME !='' "> MATERIAL_NAME='${MATERIAL_NAME}',CHANGE_NAME='${MATERIAL_NAME}',</if>
			<if test="DEFAULT_PACKAGE !=null and DEFAULT_PACKAGE !=''"> DEFAULT_PACKAGE='${DEFAULT_PACKAGE}',</if>
			<if test="HALOGEN !=null and HALOGEN !=''"> HALOGEN='${HALOGEN}',</if>
            <if test="GRP_ID !=null "> GRP_ID='${GRP_ID}',</if>
            <if test="UNIT_ID !=null "> UNIT_ID='${UNIT_ID}',</if>
            <if test="LABEL_TYPE !=null "> LABEL_TYPE='${LABEL_TYPE}',</if>
            <if test="MAX_STOCK !=null "> MAX_STOCK='${MAX_STOCK}',</if>
            <if test="MIN_STOCK !=null "> MIN_STOCK='${MIN_STOCK}',</if>
            <if test="SAFTY_STOCK !=null "> SAFTY_STOCK='${SAFTY_STOCK}',</if>
            <if test="STORE_ID !=null "> STORE_ID='${STORE_ID}',</if>
            <if test="EXPIRATION_DT !=null "> EXPIRATION_DT='${EXPIRATION_DT}',</if>
            <if test="SPEC_MODEL !=null"> SPEC_MODEL='${SPEC_MODEL}',</if>
            <if test="COLOR !=null "> COLOR='${COLOR}',</if>
            <if test="MEMO !=null "> MEMO='${MEMO}',</if>
            UPT_ID='${F_USE_CD}',UPT_DT=SYSDATE 
		</set>     
		<where> MATERIAL_ID='${MATERIAL_ID}'</where>
	</update>
	<!-- 删除物料信息 -->	
	<delete id="deleteMaterialInfo" parameterType="hashmap">
		  DELETE iplant1.C_IPLANT_M3_T WHERE MATERIAL_ID = '${MATERIAL_ID}'
	</delete>
	
	<!-- 3  物料分组验证  -->
	<!-- 物料分组验证-->
	<select id="queryMaterialHasTreeNode" parameterType="hashmap" resultType="java.util.HashMap">
		select t1.MATERIAL_ID,t1.MATERIAL_NAME,t1.GRP_ID,t2.GRP_NAME,t1.UNIT_ID,t4.UNIT_NAME,t1.LABEL_TYPE,t3.DICT_IT_NM,t1.MAX_STOCK,t1.MIN_STOCK,t1.SAFTY_STOCK,t1.STORE_ID,t1.EXPIRATION_DT,t1.SPEC_MODEL,t1.COLOR,t1.MEMO,t1.CRT_ID,t1.UPT_ID, 
		TO_CHAR(T1.CRT_DT,'YYYY-MM-DD HH24:Mi:SS') AS CRT_DT,TO_CHAR(T1.UPT_DT,'YYYY-MM-DD HH24:Mi:SS') AS UPT_DT from iplant1.C_IPLANT_M3_T t1 join iplant1.C_IPLANT_MG_T t2 on t1.GRP_ID=t2.GRP_ID
		left join wms1.C_WMS_BASIC_DD_T t3 on t3.DICT_IT=t1.LABEL_TYPE left join wms1.C_WMS_UNIT_T t4 on t4.UNIT_ID=t1.UNIT_ID
		<where> 1=1
		     <if test="MATERIAL_ID !=null and MATERIAL_ID !='' "> AND t1.MATERIAL_ID LIKE '${MATERIAL_ID}%'</if>
		     <if test="MATERIAL_P_ID !=null and MATERIAL_P_ID !='' "> AND t1.MATERIAL_ID='${MATERIAL_P_ID}'</if>
		     <if test="GRP_ID !=null and GRP_ID !='' "> AND t1.GRP_ID='${GRP_ID}'</if>
		     <if test="MATERIAL_NAME !=null and MATERIAL_NAME !='' "> AND t1.MATERIAL_NAME like '%${MATERIAL_NAME}%'</if>
		     <if test="PARENT_GRP !=null and PARENT_GRP !='' "> AND t2.PARENT_GRP='${PARENT_GRP}'</if>
	     </where>
	     order by CRT_DT
	</select>
	<!-- 查询钢网信息列表 -->
	<select id="queryRMesStencilInfo" parameterType="hashmap" resultType="java.util.HashMap">
		SELECT 	SC_CODE ,SC_NAME FROM R_MES_STENCIL
		<where> 1=1
		     <if test="SC_CODE !=null and SC_CODE !='' "> AND SC_CODE='${SC_CODE}'</if>
		     <if test="SC_NAME !=null and SC_NAME !='' "> AND SC_NAME='${SC_NAME}'</if>
	     </where> 
	</select>
	<!-- 删除物料、IC、钢网关联关系信息 -->	
	<delete id="deleteRMesMaterialStencil" parameterType="hashmap">
		  DELETE R_MES_MATERIAL_STENCIL
		<where> MATERIAL_CODE = '${MATERIAL_CODE}'
		     <if test="IC_CODE !=null and IC_CODE !='' "> AND IC_CODE='${IC_CODE}'</if>
		     <if test="STENCIL_CODE !=null and STENCIL_CODE !='' "> AND STENCIL_CODE = '${STENCIL_CODE}'</if>
	     </where>
	</delete>
	<!-- 查询仓库下拉列表框   -->
	<select id="queryRMesWarehouseList" parameterType="hashmap" resultType="java.util.HashMap">
		select STORE_ID,STORE_NAME　FROM WMS1.C_WMS_STORE_T
		<where> 1=1
		     <if test="FUNCTION_TYPE !=null and FUNCTION_TYPE !='' "> AND FUNCTION_TYPE='${FUNCTION_TYPE}'</if>
		     <if test="STRUCT_TYPE !=null and STRUCT_TYPE !='' "> AND STRUCT_TYPE = '${STRUCT_TYPE}'</if>
		     <if test="TRADE_TYPE !=null and TRADE_TYPE !='' "> AND TRADE_TYPE = '${TRADE_TYPE}'</if>
		     <if test="STORE_TYPE_ID !=null and STORE_TYPE_ID !='' "> AND STORE_TYPE_ID = '${STORE_TYPE_ID}'</if>
	     </where>
	</select>
	<!-- 查询仓库区域下拉列表框   -->
	<select id="queryRMesWarehouseAreaList" parameterType="hashmap" resultType="java.util.HashMap">
		SELECT T1.AREA_ID,T1.AREA_NAME FROM WMS1.C_WMS_AREA_T T1 LEFT JOIN WMS1.C_WMS_STORE_T T5 ON T1.STORE_ID=T5.STORE_ID WHERE T5.ENABLE =1 AND T1.STORE_ID='${STORE_ID}'
	</select>
	<!-- A.1 基础资料管理   生成托盘编码 -->	
	<select id="CreatSTORE_ID" parameterType="hashmap" resultType="java.util.HashMap"> 
		SELECT IPLANT1.CREATE_TYPE_SN_P.GET_SN_P('C','AR') AS AREA_ID  FROM DUAL
	</select> 
	<!-- 供应商、物料关联信息  查询供应商、物料关联信息 -->
	<select id="querySupplierMaterial" parameterType="hashmap" resultType="java.util.HashMap"> 
		<include refid="oraclePagingFileTop"></include>	
		t1.material_id,T1.MATERIAL_NAME,t1.supplier_id,t1.supplier_name,t1.min_package,t1.sur_material_id FROM WMS1.C_WMS_MATERIAL_FEATURE_T t1 left join WMS1.C_WMS_SUPPLIER_T t2 on t2.sup_id=t1.supplier_id
		<where> 1=1
		     <if test="SUPPLIER_ID !=null and SUPPLIER_ID !='' "> AND t1.supplier_id='${SUPPLIER_ID}'</if>
		     <if test="MATERIAL_ID !=null and MATERIAL_ID !='' "> AND t1.material_id='${MATERIAL_ID}'</if>
	     </where> 
	     <include refid="oraclePagingFileBottom"></include> ORDER BY MATERIAL_ID 
	</select> 
	<!-- 查询供应商、物料关联信息 分页总数 -->
	<select id="querySupplierMaterial_COUNT" parameterType="hashmap" resultType="java.util.HashMap">
		SELECT COUNT(1) AS ROWS_COUNT FROM WMS1.C_WMS_MATERIAL_FEATURE_T t1
		<where> 1=1
			<if test="SUPPLIER_ID !=null and SUPPLIER_ID !='' "> AND t1.supplier_id='${SUPPLIER_ID}'</if>
		    <if test="MATERIAL_ID !=null and MATERIAL_ID !='' "> AND t1.material_id='${MATERIAL_ID}'</if>
	    </where>			  
	</select>
	<!-- 新增供应商、物料关联信息 -->
	<insert id="insertSupplierMaterial" parameterType="hashmap">
		INSERT INTO WMS1.C_WMS_MATERIAL_FEATURE_T (MATERIAL_ID,MATERIAL_NAME,SUPPLIER_ID,SUPPLIER_NAME,MIN_PACKAGE,SUR_MATERIAL_ID)
		(<foreach collection="list" item="item" index="index" separator="union all">
             SELECT '${item.MATERIAL_ID}','${item.MATERIAL_NAME}','${item.SUPPLIER_ID}','${item.SUPPLIER_NAME}','${item.MIN_PACKAGE}','${item.SUR_MATERIAL_ID}' FROM DUAL	
	     </foreach>)  
	</insert>
	<!-- 修改供应商、物料关联信息 -->
	<update id="updateSupplierMaterial" parameterType="hashmap">
		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
			UPDATE  WMS1.C_WMS_MATERIAL_FEATURE_T
			<set>
            	<if test="item.MIN_PACKAGE !=null "> MIN_PACKAGE='${item.MIN_PACKAGE}',</if>
            	<if test="item.SUR_MATERIAL_ID !=null "> SUR_MATERIAL_ID='${item.SUR_MATERIAL_ID}'</if>
			</set>     
			<where>1=1 
			 	AND SUPPLIER_ID='${item.SUPPLIER_ID}'  AND MATERIAL_ID='${item.MATERIAL_ID}'
			</where>
		</foreach>
	</update>  
	<!-- 删除供应商、物料关联信息 -->	
	<delete id="deleteSupplierMaterial" parameterType="hashmap">
		  DELETE WMS1.C_WMS_MATERIAL_FEATURE_T WHERE MATERIAL_ID = '${MATERIAL_ID}' AND SUPPLIER_ID='${SUPPLIER_ID}'
	</delete>
	
	<!-- 查询货位信息 -->
	<select id="queryLocationInfo" parameterType="hashmap" resultType="java.util.HashMap"> 
		<include refid="oraclePagingFileTop"></include>	
		T1.LOCATION_ID,T1.LOCATION_NAME,T1.ROW_ID,T1.COL_ID,T1.BARCODE,T1.STATUS,T1.STORE_ID,T4.STORE_NAME,T1.AREA_ID,T3.AREA_NAME,T1.SHELF_ID,T2.SHELF_NAME,T1.ENABLE,T1.MEMO,T1.CRT_ID,T1.CRT_DT FROM WMS1.C_WMS_LOCATION_T T1
		LEFT JOIN WMS1.C_WMS_SHELF_T T2 ON T1.SHELF_ID=T2.SHELF_ID LEFT JOIN WMS1.C_WMS_AREA_T T3 ON T1.AREA_ID=T3.AREA_ID LEFT JOIN WMS1.C_WMS_STORE_T T4 ON T1.STORE_ID=T4.STORE_ID
		<where> 1=1
		     <if test="STORE_ID !=null and STORE_ID !='' "> AND T1.STORE_ID='${STORE_ID}'</if>
		     <if test="BARCODE !=null and BARCODE !='' "> AND T1.BARCODE='${BARCODE}'</if>
		     <if test="STORE_NAME !=null and STORE_NAME !='' "> AND T4.STORE_NAME LIKE '%${STORE_NAME}%'</if>
		     <if test="AREA_ID !=null and AREA_ID !='' "> AND T1.AREA_ID='${AREA_ID}'</if>
		     <if test="AREA_NAME !=null and AREA_NAME !='' "> AND T3.AREA_NAME LIKE '%${AREA_NAME}%'</if>
		     <if test="SHELF_ID !=null and SHELF_ID !='' "> AND T1.SHELF_ID='${SHELF_ID}'</if>
		     <if test="SHELF_NAME !=null and SHELF_NAME !='' "> AND T2.SHELF_NAME LIKE '%${SHELF_NAME}%'</if>
		     <if test="LOCATION_ID !=null and LOCATION_ID !='' "> AND T1.LOCATION_ID='${LOCATION_ID}'</if>
		     <if test="LOCATION_NAME !=null and LOCATION_NAME !='' "> AND T1.LOCATION_NAME LIKE '%${LOCATION_NAME}%'</if>
		     and t1.enable=1 and t2.enable=1 and t3.enable=1 and t4.enable=1
	     </where> 
	     ORDER BY T1.LOCATION_ID 
	     <include refid="oraclePagingFileBottom"></include> 
	</select>
	<!-- 查询货位信息分页总数 -->
	<select id="queryLocationInfo_COUNT" parameterType="hashmap" resultType="java.util.HashMap">
		SELECT COUNT(1) AS ROWS_COUNT FROM WMS1.C_WMS_LOCATION_T T1 LEFT JOIN WMS1.C_WMS_SHELF_T T2 ON T1.SHELF_ID=T2.SHELF_ID LEFT JOIN WMS1.C_WMS_AREA_T T3 ON T1.AREA_ID=T3.AREA_ID LEFT JOIN WMS1.C_WMS_STORE_T T4 ON T1.STORE_ID=T4.STORE_ID
		<where> 1=1
		     <if test="STORE_ID !=null and STORE_ID !='' "> AND T1.STORE_ID='${STORE_ID}'</if>
		     <if test="BARCODE !=null and BARCODE !='' "> AND T1.BARCODE='${BARCODE}'</if>
		     <if test="STORE_NAME !=null and STORE_NAME !='' "> AND T4.STORE_NAME LIKE '%${STORE_NAME}%'</if>
		     <if test="AREA_ID !=null and AREA_ID !='' "> AND T1.AREA_ID='${AREA_ID}'</if>
		     <if test="AREA_NAME !=null and AREA_NAME !='' "> AND T3.AREA_NAME LIKE '%${AREA_NAME}%'</if>
		     <if test="SHELF_ID !=null and SHELF_ID !='' "> AND T1.SHELF_ID='${SHELF_ID}'</if>
		     <if test="SHELF_NAME !=null and SHELF_NAME !='' "> AND T2.SHELF_NAME LIKE '%${SHELF_NAME}%'</if>
		     <if test="LOCATION_ID !=null and LOCATION_ID !='' "> AND T1.LOCATION_ID='${LOCATION_ID}'</if>
		     <if test="LOCATION_NAME !=null and LOCATION_NAME !='' "> AND T1.LOCATION_NAME LIKE '%${LOCATION_NAME}%'</if>
	     </where> 
	     ORDER BY T1.LOCATION_ID 
	</select>
	
	<!-- 查询库存管理仓库树结构 -->
	<select id="whStoreTreeQuery" parameterType="hashmap" resultType="java.util.HashMap">
		SELECT '1' AS STATUS,
		       'ALL' AS ST_C_CD,
		       '全部仓库' AS ST_C_NM,
		       'N/A' AS ST_P_CD
	    FROM DUAL
	    UNION ALL
		SELECT '2' AS STATUS,
			    WH.DICT_IT AS ST_C_CD,
			    WH.DICT_IT_NM AS ST_C_NM,
			    'ALL' AS ST_P_CD
		FROM WMS1.C_WMS_BASIC_DD_T WH
	    WHERE DICT_CD='WSTORE'
	    AND DICT_IT !='WSTORE-02'
		UNION ALL
		SELECT '3' AS STATUS,
			   WT.STORE_ID AS ST_C_CD,
			   WT.STORE_NAME AS ST_C_NM,
			   WT.STORE_TYPE_ID AS ST_P_CD
	    FROM WMS1.C_WMS_STORE_T WT
		WHERE WT.ENABLE = '1'
	</select>
	
	<!-- 查询线边仓库存管理仓库树结构 -->
	<select id="kitStoreTreeQuery" parameterType="hashmap" resultType="java.util.HashMap">
		SELECT '1' AS STATUS,
			    WH.DICT_IT AS ST_C_CD,
			    WH.DICT_IT_NM AS ST_C_NM,
			    'N/A' AS ST_P_CD
		FROM WMS1.C_WMS_BASIC_DD_T WH
	    WHERE DICT_CD='WSTORE'
	    AND DICT_IT ='WSTORE-02'
		UNION ALL
		SELECT '2' AS STATUS,
			   WT.STORE_ID AS ST_C_CD,
			   WT.STORE_NAME AS ST_C_NM,
			   WT.STORE_TYPE_ID AS ST_P_CD
	    FROM WMS1.C_WMS_STORE_T WT
		WHERE WT.ENABLE = '1'
	</select>
	<!-- 查询多物料是否启用 -->
   <select id="querybuda" parameterType="hashmap"  statementType="CALLABLE" resultType="java.util.HashMap">
		{call IPLANT1.WMS_PACKAGE_MANAGE.wms_materia_querybserd('${SERIAL_NUMBER}',
					#{RC1,jdbcType=CURSOR,mode=OUT,javaType=ResultSet,resultMap=checkInResult},
    				#{errorCode,jdbcType=VARCHAR,mode=OUT,javaType=String}, 
    				#{errorMessage,jdbcType=VARCHAR,mode=OUT,javaType=String},
    				#{ROWS_COUNT,jdbcType=INTEGER,mode=OUT,javaType=Integer})}
	</select>
   <!-- 查询ERP对应WMS仓库信息 -->
   	<select id="queryWMStoERPwarehouse" parameterType="hashmap" resultType="java.util.HashMap">
    	<include refid="oraclePagingFileTop"></include> 
    	T1.SE_ID,T1.STORE_ID,T1.ERP_ID,T1.MEMO,T1.CRT_ID,IPLANT1.F_GET_USER_NAME(T1.CRT_ID) AS CRT_ID_NM,TO_CHAR(T1.CRT_DT,'YYYY-MM-DD HH24:Mi:SS') AS CRT_DT FROM  WMS1.C_WMS_STORE_ERP_T T1
    	<where> 1=1
      		<if test="SE_ID !=null and SE_ID !='' "> AND T1.SE_ID='${SE_ID}'</if>
          	<if test="STORE_ID !=null and STORE_ID !='' "> AND  T1.STORE_ID='${STORE_ID}'</if>
            <if test="ERP_ID !=null and ERP_ID !='' "> AND  T1.ERP_ID='${ERP_ID}'</if>
        </where> ORDER BY T1.CRT_DT ASC
        <include refid="oraclePagingFileBottom"></include>
  	</select> 
  	<!-- 查询ERP对应WMS仓库信息分页总数 -->
  	<select id="queryWMStoERPwarehouse_COUNT" parameterType="hashmap" resultType="java.util.HashMap">
    	SELECT COUNT(1) ROWS_COUNT FROM  WMS1.C_WMS_STORE_ERP_T T1 
    	<where> 1=1
      		<if test="SE_ID !=null and SE_ID !='' "> AND T1.SE_ID='${SE_ID}'</if>
          	<if test="STORE_ID !=null and STORE_ID !='' "> AND  T1.STORE_ID='${STORE_ID}'</if>
            <if test="ERP_ID !=null and ERP_ID !='' "> AND  T1.ERP_ID='${ERP_ID}'</if>
        </where> 
  	</select>
  	<!-- 新增ERP对应WMS仓库信息 -->
  	<insert id="insertWMStoERPwarehouse" parameterType="java.util.List" >
      	INSERT INTO WMS1.C_WMS_STORE_ERP_T(SE_ID,STORE_ID,ERP_ID,MEMO,CRT_ID,CRT_DT)
     	(<foreach collection="list" item="item" index="index" separator="union all"> SELECT IPLANT1.CREATE_TYPE_SN_P.GET_SN_P('C','ERP'),'${item.STORE_ID}','${item.ERP_ID}','${item.MEMO}','${F_USE_CD}',SYSDATE FROM DUAL </foreach> )
  	</insert>
  	<!-- 删除ERP对应WMS仓库信息 -->   
  	<delete id="deleteWMStoERPwarehouse"  parameterType="hashmap">
    	DELETE WMS1.C_WMS_STORE_ERP_T  <where> SE_ID='${SE_ID}'</where>
  	</delete> 
  	<!-- 修改ERP对应WMS仓库信息-->    
  	<update id="updateWMStoERPwarehouse" parameterType="java.util.List">
  		<foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
     		UPDATE WMS1.C_WMS_STORE_ERP_T
          	<set>
             	<if test="item.ERP_ID!=null and item.ERP_ID!=''"> ERP_ID = '${item.ERP_ID}', </if>
             	<if test="item.MEMO!=null and item.MEMO!=''"> MEMO = '${item.MEMO}', </if>
            	CRT_ID = '${F_USE_CD}',CRT_DT = SYSDATE
          	</set>
         	<where> SE_ID = '${item.SE_ID}' AND STORE_ID = '${item.STORE_ID}'</where>
  		</foreach>
  	</update>
  	<select id="queryDictionaryTree" parameterType="hashmap" resultType="java.util.HashMap">
  	    SELECT * FROM (SELECT T1.DICT_CD AS ST_C_CD,T1.DICT_NM AS ST_C_NM,'N/A' AS ST_P_CD,T1.CRT_DT FROM WMS1.C_WMS_BASIC_DM_T T1 WHERE T1.USE_YN='${USE_YN}'  AND T1.DICT_CD='${DICT_CD}' 
  	    UNION ALL SELECT T1.DICT_IT AS ST_C_CD,T1.DICT_IT_NM AS ST_C_NM,T1.DICT_CD AS ST_P_CD,T1.CRT_DT FROM WMS1.C_WMS_BASIC_DD_T T1 WHERE T1.USE_YN='${USE_YN}' AND T1.DICT_CD='${DICT_CD}' 
		 ) ORDER BY ST_C_CD ASC,CRT_DT DESC
	</select> 
 	<!-- 模版管理 -->
 	<select id="queryTemplet" parameterType="hashmap" resultType="java.util.HashMap">
    	<include refid="oraclePagingFileTop"></include> 
    	T1.TEMPLET_NAME,T1.TEMPLET_TYPE,T2.DICT_IT_NM AS TEMPLET_TYPE_NM,T1.TEMPLET_ID,T1.ENABLE,T1.TEMPLET_PATH,T1.CRT_ID,IPLANT1.F_GET_USER_NAME(T1.CRT_ID) AS CRT_NM,TO_CHAR(T1.CRT_DT,'YYYY-MM-DD HH24:Mi:SS') AS CRT_DT FROM  WMS1.C_WMS_BILLTEMPLET_T T1 LEFT JOIN WMS1.C_WMS_BASIC_DD_T T2 ON T1.TEMPLET_TYPE=T2.DICT_IT
    	<where> 1=1
      		<if test="qTempletName !=null and qTempletName !='' "> AND T1.TEMPLET_NAME LIKE '%${qTempletName}%'</if>
          	<if test="qTempletType !=null and qTempletType !='' "> AND  T1.TEMPLET_TYPE='${qTempletType}'</if>
            <if test="qTempleBegin !=null and qTempleBegin !='' "> AND T1.CRT_DT &gt;= to_date('${qTempleBegin}','yyyy-mm-dd')</if>
			<if test="qTempleEnd !=null and qTempleEnd !='' "> AND T1.CRT_DT &lt;= to_date('${qTempleEnd}','yyyy-mm-dd') </if>
        </where> ORDER BY T1.CRT_DT ASC
        <include refid="oraclePagingFileBottom"></include>
  	</select> 
  	<select id="queryTemplet_COUNT" parameterType="hashmap" resultType="java.util.HashMap">
    	SELECT COUNT(1) ROWS_COUNT FROM  WMS1.C_WMS_BILLTEMPLET_T T1 
    	<where> 1=1
      		<if test="qTempletName !=null and qTempletName !='' "> AND T1.TEMPLET_NAME LIKE '%${qTempletName}%'</if>
          	<if test="qTempletType !=null and qTempletType !='' "> AND  T1.TEMPLET_TYPE='${qTempletType}'</if>
            <if test="qTempletBegin !=null and qTempletBegin !='' "> AND T1.CRT_DT &gt;= to_date('${qTempletBegin}','yyyy-mm-dd')</if>
			<if test="qTempletEnd !=null and qTempletEnd !='' "> AND T1.CRT_DT &lt;= to_date('${qTempletEnd}','yyyy-mm-dd') </if>
        </where>
  	</select>
  	<insert id="insertTemplet" parameterType="hashmap" >
      	INSERT INTO WMS1.C_WMS_BILLTEMPLET_T(TEMPLET_ID,TEMPLET_NAME,TEMPLET_TYPE,ENABLE,CRT_ID,CRT_DT) VALUES('${templetId}','${templetName}','${templetType}','${enable}','${F_USE_CD}',SYSDATE)
  	</insert>
  	<update id="updateTemplet" parameterType="java.util.HashMap" >
		UPDATE  WMS1.C_WMS_BILLTEMPLET_T 
		<set>
			<if test="templetName !=null and templetName !=''"> TEMPLET_NAME='${templetName}',</if>
			<if test="templetType !=null and templetType !=''"> TEMPLET_TYPE='${templetType}',</if>
			<if test="enable !=null and enable !=''"> ENABLE='${enable}',</if>
            CRT_DT=SYSDATE 
		</set>     
		<where> TEMPLET_ID='${templetId}'</where>
	</update>
  	<delete id="deleteTemplet" parameterType="hashmap">
    	DELETE WMS1.C_WMS_BILLTEMPLET_T  <where> TEMPLET_ID='${templetId}'</where>
  	</delete> 
  	
  	<select id="queryCanImport" parameterType="hashmap" resultType="java.util.HashMap">
    	select count(1) COUNTNUM FROM WMS1.C_WMS_BASIC_DD_T  
    	<where> 1=1
      		<if test="DICT_CD !=null and DICT_CD !='' "> AND DICT_CD = '${DICT_CD}'</if>
          	<if test="DICT_IT !=null and DICT_IT !='' "> AND DICT_IT='${DICT_IT}'</if>
			and USE_YN='Y'
        </where>
  	</select>
  	
  	<!-- 查询库存管理仓库 -->
	<select id="IPCwhStoreTreeQuery" parameterType="hashmap" resultType="java.util.HashMap">
		SELECT '2' AS STATUS,WT.STORE_ID AS ST_C_CD,WT.STORE_NAME AS ST_C_NM,'ALL' AS ST_P_CD FROM WMS1.C_WMS_STORE_T WT WHERE WT.ENABLE = '1'
	</select>
	<!-- 来料外箱查询 -->
	<select id="queryMatCarton" parameterType="hashmap" resultType="java.util.HashMap">
		<include refid="oraclePagingFileTop"></include>
		   DISTINCT(T0.CARTON_NO) AS CARTON_NO,
	       T0.MATERIAL_ID,
	       T0.MATERIAL_NAME,
	       T0.LOT_NO,
	       IPLANT1.GET_TOTALQTY_CARTON_NO(CARTON_NO) as totalqty,
	       T0.Supplier_Name,
	       T0.ARRIVAL_NO,
	       T.PO_NO
		  FROM WMS1.R_WMS_ARRIVAL_SN_T T0, WMS1.R_WMS_ARRIVAL_T T
		<where>T0.ARRIVAL_NO = T.ARRIVAL_NO AND T0.CARTON_NO <![CDATA[<>]]>  'N/A'
		 	<if test="CARTON_NO !=null and CARTON_NO !='' "> 
		 		AND T0.CARTON_NO IN(select CARTON_NO from wms1.R_WMS_ARRIVAL_CARTON_T start with CARTON_NO = '${CARTON_NO}' connect by prior CARTON_NO = NEXT_CARTON)
		 	</if>
		 	<if test="PO_NO !=null and PO_NO !='' "> AND T.PO_NO = '${PO_NO}'</if>
		 	<if test="ARRIVAL_NO !=null and ARRIVAL_NO !='' "> AND T0.ARRIVAL_NO = '${ARRIVAL_NO}'</if>
		</where>
		<include refid="oraclePagingFileBottom"></include>
	</select>
	<select id="queryMatCarton_COUNT" parameterType="hashmap" resultType="java.util.HashMap">
		select count(1) as rows_count FROM WMS1.R_WMS_ARRIVAL_SN_T T0, WMS1.R_WMS_ARRIVAL_T T
		<where>T0.ARRIVAL_NO = T.ARRIVAL_NO AND T0.CARTON_NO <![CDATA[<>]]>  'N/A'
		 	<if test="CARTON_NO !=null and CARTON_NO !='' "> 
		 		AND T0.CARTON_NO IN(select CARTON_NO from wms1.R_WMS_ARRIVAL_CARTON_T start with CARTON_NO = '${CARTON_NO}' connect by prior CARTON_NO = NEXT_CARTON)
		 	</if>
		 	<if test="PO_NO !=null and PO_NO !='' "> AND T.PO_NO = '${PO_NO}'</if>
		 	<if test="ARRIVAL_NO !=null and ARRIVAL_NO !='' "> AND T0.ARRIVAL_NO = '${ARRIVAL_NO}'</if>
		</where>
	</select>
	<resultMap id="dataResult" type="java.util.HashMap">
		<result property="MESSAGE" column="MESSAGE"/>
	</resultMap>
	<select id="syncWmsFromErp" parameterType="hashmap" statementType="CALLABLE" resultType="java.util.HashMap">
		{call IPLANT1.WMS_AUTO_ERP.WMS_AUTOFROMERP('${OPTYPE}','${FACTORYID}',
				#{RC1,jdbcType=CURSOR,mode=OUT,javaType=ResultSet,resultMap=dataResult},
   				#{errorCode,jdbcType=VARCHAR,mode=OUT,javaType=String}, 
   				#{errorMessage,jdbcType=VARCHAR,mode=OUT,javaType=String},
   				#{ROWS_COUNT,jdbcType=INTEGER,mode=OUT,javaType=Integer})}
	</select>
	
	<!-- 查询单据状态 -->
	<select id="queryBillStatus" parameterType="hashmap" resultType="java.util.HashMap">
		SELECT         
		      T1.IT_ID,
              T1.DICT_CD,
              T2.DICT_NM,
              T1.DICT_IT,
              T1.DICT_IT_NM
         FROM WMS1.C_WMS_BASIC_DD_T T1
         LEFT JOIN WMS1.C_WMS_BASIC_DM_T T2 ON T1.DICT_CD = T2.DICT_CD
		<where>1=1
		    AND T1.DICT_IT IN ('WORDERSTATUS-01','WORDERSTATUS-02','WORDERSTATUS-03')
		</where>
		ORDER BY T1.DICT_IT
	</select>
	
	<!-- 查询非待处理仓、线边仓 -->
	<select id="queryStoreCom" parameterType="hashmap" resultType="java.util.HashMap">
		SELECT         
		     STORE_ID,
		     STORE_NAME
         FROM WMS1.C_WMS_STORE_T 
		<where>1=1
		    AND STORE_TYPE_ID NOT IN ('WSTORE-07','WSTORE-02')
		</where>
	</select>
</mapper>